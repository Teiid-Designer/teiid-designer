<?xml version="1.0" encoding="iso-8859-1"?>

<!--
==
== Script to resolve the plugin's lib directory dependencies
== and generate the SQLParser sources using javacc
==
== Note. This has to build both the target platform and the
==       spi plugin in order to satisfy the dependencies of
==       this plugin (even though we are not actually
==       compiling it!)
==
-->

<project name="download-libs" default="download" xmlns:ac="antlib:net.sf.antcontrib">

	<property name="GIT-HOME" location="../.." />

	<import file="${GIT-HOME}/scripts/build-common.xml" />

	<property name="war-lib-dir" value="webapps/WEB-INF/lib" />

	<property name="rest-lib-dir" value="rest_war_resources/${war-lib-dir}" />

	<property name="soap-lib-dir" value="war_resources/${war-lib-dir}" />

	<!-- Comma-separated list of required libraries -->
	<property name="rest-libs" value="activation.jar,
									commons-codec.jar,
									commons-logging.jar,
									guava.jar,
									httpclient.jar,
									httpcore.jar,
									jackson-annotations.jar,
									jackson-core.jar,
									jackson-databind.jar,
									jackson-jaxrs-json-provider.jar,
									jackson-module-jaxb-annotations.jar,
									jackson-module-jsonSchema.jar,
									jackson-module-scala_2.10.jar,
									javassist.jar,
									jaxrs-api.jar,
									jcip-annotations.jar,
									jettison.jar,
									json.jar,
									json4s-ast_2.10.jar,
									json4s-core_2.10.jar,
									json4s-ext_2.10.jar,
									json4s-jackson_2.10.jar,
									json4s-native_2.10.jar,
									jsr250-api.jar,
									jsr311-api.jar,
									paranamer.jar,
									reflections.jar,
									resteasy-jaxb-provider.jar,
									resteasy-jaxrs.jar,
									resteasy-jettison-provider.jar,
									saxonhe.jar,
									scala-library.jar,
									scala-reflect.jar,
									scannotation.jar,
									sjsxp.jar,
									swagger-annotations.jar,
									swagger-core_2.10.jar,
									swagger-jaxrs_2.10.jar" />

	<property name="soap-libs" value="wss4j.jar" />

	<!--
	   Test whether all the required libraries are present
	-->
	<target name="check-libs" depends="init-ant-contrib">
		<!-- correct any extra whitespace created from formatting -->
		<removeWhitespace arg="${rest-libs}" />

		<filelist id="my.restlibs" dir="${rest-lib-dir}" files="${rwsResult}" />
		<restrict id="missing.restlibs">
			<filelist refid="my.restlibs" />
			<not>
				<exists />
			</not>
		</restrict>

		<!-- correct any extra whitespace created from formatting -->
		<removeWhitespace arg="${soap-libs}" />

		<filelist id="my.soaplibs" dir="${soap-lib-dir}" files="${rwsResult}" />
		<restrict id="missing.soaplibs">
			<filelist refid="my.soaplibs" />
			<not>
				<exists />
			</not>
		</restrict>

		<property name="missing.restlibs" refid="missing.restlibs" />
		<property name="missing.soaplibs" refid="missing.soaplibs" />
		<condition property="libs-present" value="true">
			<length string="${missing.restlibs}${missing.soaplibs}" length="0" />
		</condition>
	</target>

	<!--
	   Check whether the libraries have already been downloaded.
	   If any are missing then they should be downloaded.
	-->
	<target name="check-work" depends="check-libs">
		<condition property="should-import" value="true">
			<isfalse value="${libs-present}" />
		</condition>
	</target>

	<target name="nothing-todo" unless="should-import">
		<echo message="Project library import is up-to-date" />
	</target>

	<target name="clean-internal" if="should-import">
		<!-- Nothing to do -->
	</target>

	<target name="clean">
		<property name="should-import" value="true" />
		<antcall target="clean-internal" />
	</target>

	<target name="download" depends="init-ant-contrib, check-work, nothing-todo, clean-internal" if="should-import">
		<echo message="Importing libraries using maven ..." />
		<mvn dir="." args="process-sources" />

	</target>
</project>