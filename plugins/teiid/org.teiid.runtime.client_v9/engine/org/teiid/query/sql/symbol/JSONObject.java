/* Generated By:JJTree: Do not edit this line. JSONObject.java Version 4.3 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=true,VISITOR=true,TRACK_TOKENS=false,NODE_PREFIX=,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package org.teiid.query.sql.symbol;

import java.util.List;
import org.teiid.core.types.DataTypeManagerService;
import org.teiid.designer.query.sql.symbol.IJSONObject;
import org.teiid.query.parser.LanguageVisitor;
import org.teiid.query.parser.TeiidParser;
import org.teiid.query.sql.lang.SimpleNode;

/**
 *
 */
public class JSONObject extends SimpleNode implements Expression, IJSONObject<LanguageVisitor> {

    private List<DerivedColumn> args;

    /**
     * @param p
     * @param id
     */
    public JSONObject(TeiidParser p, int id) {
        super(p, id);
    }

    @Override
    public Class<?> getType() {
        return DataTypeManagerService.DefaultDataTypes.CLOB.getTypeClass();
    }

    /**
     * @return the args
     */
    public List<DerivedColumn> getArgs() {
        return this.args;
    }

    /**
     * @param args the args to set
     */
    public void setArgs(List<DerivedColumn> args) {
        this.args = args;
    }

    @Override
    public int hashCode() {
        final int prime = 31;
        int result = super.hashCode();
        result = prime * result + ((this.args == null) ? 0 : this.args.hashCode());
        return result;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (!super.equals(obj)) return false;
        if (getClass() != obj.getClass()) return false;
        JSONObject other = (JSONObject)obj;
        if (this.args == null) {
            if (other.args != null) return false;
        } else if (!this.args.equals(other.args)) return false;
        return true;
    }

    /** Accept the visitor. **/
    @Override
    public void acceptVisitor(LanguageVisitor visitor) {
        visitor.visit(this);
    }

    @Override
    public JSONObject clone() {
        JSONObject clone = new JSONObject(this.parser, this.id);

        if(getArgs() != null)
            clone.setArgs(cloneList(getArgs()));

        return clone;
    }

}
/* JavaCC - OriginalChecksum=11f03dfea01b276b80a4ca9712edf559 (do not edit this line) */
