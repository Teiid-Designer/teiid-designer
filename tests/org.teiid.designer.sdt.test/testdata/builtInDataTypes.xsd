<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--
  JBoss, Home of Professional Open Source.

  See the LEGAL.txt file distributed with this work for information regarding copyright ownership and licensing.

  See the AUTHORS.txt file distributed with this work for a full listing of individual contributors.
-->
<xs:schema xmlns:mmedt="http://www.metamatrix.com/2005/XmlSchema/EnterpriseDatatypes" xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="http://www.metamatrix.com/metamodels/SimpleDatatypes-instance">
    <xs:simpleType mmedt:UUID="mmuuid:4ca2ae00-3a95-1e20-921b-eeee28353879" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="NMTOKEN">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] NMTOKEN represents the
                NMTOKEN attribute type from [XML 1.0 (Second Edition)].
                The value space of NMTOKEN is the set of tokens that
                match the Nmtoken production in [XML 1.0 (Second
                Edition)]. The lexical space of NMTOKEN is the set of
                strings that match the Nmtoken production in [XML 1.0
                (Second Edition)]. The base type of NMTOKEN is token.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="\c+"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:4df43700-3b13-1e20-921b-eeee28353879" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="normalizedString">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] normalizedString represents
                white space normalized strings. The value space of
                normalizedString is the set of strings that do not
                contain the carriage return (#xD), line feed (#xA) nor
                tab (#x9) characters. The lexical space of
                normalizedString is the set of strings that do not
                contain the carriage return (#xD) nor tab (#x9)
                characters. The base type of normalizedString is string.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:whiteSpace value="replace"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:3425cb80-d844-1e20-9027-be6d2c3b8b3a" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="token">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] token represents tokenized
                strings. The value space of token is the set of strings
                that do not contain the line feed (#xA) nor tab (#x9)
                characters, that have no leading or trailing spaces
                (#x20) and that have no internal sequences of two or
                more spaces. The lexical space of token is the set of
                strings that do not contain the line feed (#xA) nor tab
                (#x9) characters, that have no leading or trailing
                spaces (#x20) and that have no internal sequences of two
                or more spaces. The base type of token is normalizedString.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:normalizedString">
            <xs:whiteSpace value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:d4d980c0-e623-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="language">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] language represents natural
                language identifiers as defined by [RFC 1766]. The value
                space of language is the set of all strings that are
                valid language identifiers as defined in the language
                identification section of [XML 1.0 (Second Edition)].
                The lexical space of language is the set of all strings
                that are valid language identifiers as defined in the
                language identification section of [XML 1.0 (Second
                Edition)]. The base type of language is token.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="([a-zA-Z]{2}|[iI]-[a-zA-Z]+|[xX]-[a-zA-Z]{1,8})(-[a-zA-Z]{1,8})*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:e66c4600-e65b-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="Name">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] Name represents XML Names.
                The value space of Name is the set of all strings which
                match the Name production of [XML 1.0 (Second Edition)].
                The lexical space of Name is the set of all strings
                which match the Name production of [XML 1.0 (Second
                Edition)]. The base type of Name is token.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:token">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="\i\c*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:ac00e000-e676-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="NCName">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] NCName represents
                XML"non-colonized" Names. The value space of
                NCName is the set of all strings which match the NCName
                production of [Namespaces in XML]. The lexical space of
                NCName is the set of all strings which match the NCName
                production of [Namespaces in XML]. The base type of
                NCName is Name.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:Name">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="[\i-[:]][\c-[:]]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:4b0f8500-e6a6-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="NMTOKENS">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] NMTOKENS represents the
                NMTOKENS attribute type from [XML 1.0 (Second
                Edition)].The value space of NMTOKENS is the set of
                finite,                 non-zero-length sequences of
                NMTOKENs. The lexical space                 of NMTOKENS
                is the set of white space separated lists of
                tokens, of which each token is in the lexical space of
                NMTOKEN. The itemType of NMTOKENS is NMTOKEN.</xs:documentation>
        </xs:annotation>
        <xs:restriction>
            <xs:simpleType>
                <xs:list itemType="xs:NMTOKEN"/>
            </xs:simpleType>
            <xs:minLength id="NMTOKENS.minLength" value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:dd33ff40-e6df-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="IDREF">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] IDREF represents the IDREF
                attribute type from [XML 1.0 (Second Edition)]. The
                value space of IDREF is the set of all strings that
                match the NCName production in [Namespaces in XML]. The
                lexical space of IDREF is the set of strings that match
                the NCName production in [Namespaces in XML]. The base
                type of IDREF is NCName.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NCName">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="[\i-[:]][\c-[:]]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:88b13dc0-e702-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="ID">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] ID represents the ID
                attribute type from [XML 1.0 (Second Edition)]. The
                value space of ID is the set of all strings that match
                the NCName production in [Namespaces in XML]. The
                lexical space of ID is the set of all strings that match
                the NCName production in [Namespaces in XML]. The base
                type of ID is NCName.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NCName">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="[\i-[:]][\c-[:]]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:9fece300-e71a-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="ENTITY">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] ENTITY represents the ENTITY
                attribute type from [XML 1.0 (Second Edition)]. The
                value space of ENTITY is the set of all strings that
                match the NCName production in [Namespaces in XML] and
                have been declared as an unparsed entity in a document
                type definition. The lexical space of ENTITY is the set
                of all strings that match the NCName production in
                [Namespaces in XML]. The base type of ENTITY is NCName.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NCName">
            <xs:whiteSpace value="collapse"/>
            <xs:pattern value="[\i-[:]][\c-[:]]*"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:3c99f780-e72d-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="IDREFS">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] IDREFS represents the IDREFS
                attribute type from [XML 1.0 (Second Edition)]. The
                value space of IDREFS is the set of finite,
                non-zero-length sequences of IDREFs. The lexical space
                of IDREFS is the set of white space separated lists of
                tokens, of which each token is in the lexical space of
                IDREF. The itemType of IDREFS is IDREF.</xs:documentation>
        </xs:annotation>
        <xs:restriction>
            <xs:simpleType>
                <xs:list itemType="xs:IDREF"/>
            </xs:simpleType>
            <xs:minLength id="IDREFS.minLength" value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:20360100-e742-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="ENTITIES">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] ENTITIES represents the
                ENTITIES attribute type from [XML 1.0 (Second Edition)].
                The value space of ENTITIES is the set of finite,
                non-zero-length sequences of ENTITYs that have been
                declared as unparsed entities in a document type
                definition. The lexical space of ENTITIES is the set of
                white space separated lists of tokens, of which each
                token is in the lexical space of ENTITY. The itemType of
                ENTITIES is ENTITY.</xs:documentation>
        </xs:annotation>
        <xs:restriction>
            <xs:simpleType>
                <xs:list itemType="xs:ENTITY"/>
            </xs:simpleType>
            <xs:minLength id="ENTITIES.minLength" value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:45da3500-e78f-1e20-8c26-a038c6ed7576" mmedt:runtimeDataType="integer" mmedt:runtimeDataTypeFixed="false" name="integer">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] int is derived from long by
                setting the value of maxInclusive to be 2147483647 and
                minInclusive to be -2147483648. The base type of int is long.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:long">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="-2147483648"/>
            <xs:maxInclusive value="2147483647"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:cbdd6e40-b9d2-1e21-8c26-a038c6ed7576" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="nonPositiveInteger">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] nonPositiveInteger is
                derived from integer by setting the value of
                maxInclusive to be 0. This results in the standard
                mathematical concept of the non-positive integers. The
                value space of nonPositiveInteger is the infinite set
                {...,-2,-1,0}. The base type of nonPositiveInteger is integer.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:integer">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:maxInclusive value="0"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:0e081200-b8a4-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="nonNegativeInteger">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] nonNegativeInteger is
                derived from integer by setting the value of
                minInclusive to be 0. This results in the standard
                mathematical concept of the non-negative integers. The
                value space of nonNegativeInteger is the infinite set
                {0,1,2,...}. The base type of nonNegativeInteger is integer.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:integer">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="0"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:86d29280-b8d3-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="negativeInteger">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] negativeInteger is derived
                from nonPositiveInteger by setting the value of
                maxInclusive to be -1. This results in the standard
                mathematical concept of the negative integers. The value
                space of negativeInteger is the infinite set
                {...,-2,-1}. The base type of negativeInteger is nonPositiveInteger.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:nonPositiveInteger">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:maxInclusive value="-1"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:8cdee840-b900-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="long" mmedt:runtimeDataTypeFixed="false" name="long">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] long is derived from integer
                by setting the value of maxInclusive to be
                9223372036854775807 and minInclusive to be
                -9223372036854775808. The base type of long is integer.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:integer">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="-9223372036854775808"/>
            <xs:maxInclusive value="9223372036854775807"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:33add3c0-b98d-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="integer" mmedt:runtimeDataTypeFixed="false" name="int">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] int is derived from long by
                setting the value of maxInclusive to be 2147483647 and
                minInclusive to be -2147483648. The base type of int is long.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:long">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="-2147483648"/>
            <xs:maxInclusive value="2147483647"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:5bbcf140-b9ae-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="short" mmedt:runtimeDataTypeFixed="false" name="short">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] short is derived from int by
                setting the value of maxInclusive to be 32767 and
                minInclusive to be -32768. The base type of short is int.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:int">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="-32768"/>
            <xs:maxInclusive value="32767"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:26dc1cc0-b9c8-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="byte" mmedt:runtimeDataTypeFixed="false" name="byte">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] byte is derived from short
                by setting the value of maxInclusive to be 127 and
                minInclusive to be -128. The base type of byte is short.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:short">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="-128"/>
            <xs:maxInclusive value="127"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:1cbbd380-b9ea-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="positiveInteger">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] positiveInteger is derived
                from nonNegativeInteger by setting the value
                ofminInclusive to be 1. This results in the standard
                mathematical concept of the positive integer numbers.
                The value space of positiveInteger is the infinite set
                {1,2,...}. The base type of positiveInteger is nonNegativeInteger.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:nonNegativeInteger">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="1"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:54b98780-ba14-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="unsignedLong">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] unsignedLong is derived from
                nonNegativeInteger by setting the value of maxInclusive
                to be 18446744073709551615. The base type of
                unsignedLong is nonNegativeInteger.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:nonNegativeInteger">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="18446744073709551615"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:badcbd80-ba63-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="long" mmedt:runtimeDataTypeFixed="false" name="unsignedInt">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] unsignedInt is derived from
                unsignedLong by setting the value of maxInclusive to be
                4294967295. The base type of unsignedInt is unsignedLong.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedLong">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="4294967295"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:327093c0-ba88-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="integer" mmedt:runtimeDataTypeFixed="false" name="unsignedShort">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] unsignedShort is derived
                from unsignedInt by setting the value of maxInclusive to
                be 65535. The base type of unsignedShort is unsignedInt.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedInt">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="65535"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:cff745c0-baa2-1e21-b812-969c8fc8b016" mmedt:runtimeDataType="short" mmedt:runtimeDataTypeFixed="false" name="unsignedByte">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] unsignedByte is derived from
                unsignedShort by setting the value of maxInclusive to be
                255. The base type of unsignedByte is unsignedShort.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:unsignedShort">
            <xs:whiteSpace fixed="true" value="collapse"/>
            <xs:minInclusive value="0"/>
            <xs:maxInclusive value="255"/>
            <xs:fractionDigits fixed="true" value="0"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:bf6c34c0-c442-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="string">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] The string datatype
                represents character strings in XML. The value space of
                string is the set of finite-length sequences of
                characters (as defined in [XML 1.0 (Second Edition)])
                that match the Char production from [XML 1.0 (Second
                Edition)]. A character is an atomic unit of
                communication; it is not further specified except to
                note that every character has a corresponding Universal
                Character Set code point, which is an integer.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:whiteSpace value="preserve"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:dc476100-c483-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="boolean" mmedt:runtimeDataTypeFixed="false" name="boolean">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] boolean has the value space
                required to support the mathematical concept of
                binary-valued logic: {true, false}.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:boolean">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:569dfa00-c456-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="bigdecimal" mmedt:runtimeDataTypeFixed="false" name="decimal">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] decimal represents arbitrary
                precision decimal numbers. The value space of decimal is
                the set of the values i -n, where i and n are integers
                such that n &gt;= 0. The order-relation on decimal is:
                x&lt; y iff y - x is positive. The value space of types
                derived from decimal with a value for totalDigits of p
                is the set of values i - n, where n and i are integers
                such that p &gt;= n &gt;= 0 and the number of
                significant decimal digits in i is less than or equal to
                p. The value space of types derived from decimal with a
                value for fractionDigits of s is the set of values i -
                n, where i and n are integers such that 0 &lt;= n &lt;= s.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:d86b0d00-c48a-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="float" mmedt:runtimeDataTypeFixed="false" name="float">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] float corresponds to the
                IEEE single-precision 32-bit floating point type [IEEE
                754-1985]. The basic value space of float consists of
                the values m, where m is an integer whose absolute value
                is less than 2^24, and e is an integer between -149 and
                104, inclusive. In addition to the basic value space
                described above, the value space of float also contains
                the following special values: positive and negative
                zero, positive and negative infinity and not-a-number.
                The order-relation on float is: x &lt; y iff y - x is
                positive. Positive zero is greater than negative zero.
                Not-a-number equals itself and is greater than all float
                values including positive infinity.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:float">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:1f18b140-c4a3-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="double" mmedt:runtimeDataTypeFixed="false" name="double">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] The double datatype
                corresponds to IEEE double-precision 64-bit floating
                point type [IEEE 754-1985]. The basic value space of
                double consists of the values m, where m is an integer
                whose absolute value is less than 2^53, and e is an
                integer between -1075 and 970, inclusive. In addition to
                the basic value space described above, the value space
                of double also contains the following special values:
                positive and negative zero, positive and negative
                infinity and not-a-number. The order-relation on double
                is: x &lt; y iff y - x is positive. Positive zero is
                greater than negative zero. Not-a-number equals itself
                and is greater than all double values including positive infinity.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:double">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:3b892180-c4a7-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="time" mmedt:runtimeDataTypeFixed="false" name="time">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] time represents an instant
                of time that recurs every day. The value space of time
                is the space of time of day values as defined in 5.3 of
                [ISO 8601]. Specifically, it is a set of zero-duration
                daily time instances.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:time">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:65dcde00-c4ab-1e24-9b01-c8207cd53eb7" mmedt:runtimeDataType="date" mmedt:runtimeDataTypeFixed="false" name="date">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] date represents a calendar
                date. The value space of date is the set of Gregorian
                calendar dates as defined in 5.2.1 of [ISO 8601].
                Specifically, it is a set of one-day long, non-periodic
                instances e.g. lexical 1999-10-26 to represent the
                calendar date 1999-10-26, independent of how many hours
                this day has.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:date">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:62472700-a064-1e26-9b08-d6079ebe1f0d" mmedt:runtimeDataType="char" mmedt:runtimeDataTypeFixed="false" name="char">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] char represents a single
                character data type.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:length fixed="true" value="1"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:822b9a40-a066-1e26-9b08-d6079ebe1f0d" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="biginteger">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] biginteger represent
                arbitrary-precision integers. All operations behave as
                if bigintegers were represented in two's-complement
                notation (like Java's primitive integer types).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal"/>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:f2249740-a078-1e26-9b08-d6079ebe1f0d" mmedt:runtimeDataType="bigdecimal" mmedt:runtimeDataTypeFixed="false" name="bigdecimal">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] bigdecimal represents
                arbitrary-precision signed decimal numbers. A bigdecimal
                consists of an arbitrary precision integer unscaled
                value and a non-negative 32-bit integer scale, which
                represents the number of digits to the right of the
                decimal point. The number represented by the bigdecimal
                is (unscaledValue/10scale).</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:decimal"/>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:6d9809c0-a07e-1e26-9b08-d6079ebe1f0d" mmedt:runtimeDataType="timestamp" mmedt:runtimeDataTypeFixed="false" name="timestamp">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] timestamp represents date
                that allows the JDBC API to identify this as an SQL
                TIMESTAMP value. It adds the ability to hold the SQL
                TIMESTAMP nanos value and provides formatting and
                parsing operations to support the JDBC escape syntax for
                timestamp values. Note: This type is a composite of a
                java.util.Date and a separate nanoseconds value. Only
                integral seconds are stored in the java.util.Date
                component. The fractional seconds - the nanos - are separate.  
                The standard ANSI SQL timestamp format is
                YYYY-MM-DD HH:MM:SS[.xxxxxxxxx] Hours are 24-hour time.  
                The nanoseconds are optional.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:051a0640-b4e8-1e26-9f33-b76fd9d5fa79" mmedt:runtimeDataType="object" mmedt:runtimeDataTypeFixed="false" name="object">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] object represents a java.lang.Object</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary"/>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:559646c0-4941-1ece-b22b-f49159d22ad3" mmedt:runtimeDataType="clob" mmedt:runtimeDataTypeFixed="false" name="clob">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:5a793100-1836-1ed0-ba0f-f2334f5fbf95" mmedt:runtimeDataType="blob" mmedt:runtimeDataTypeFixed="false" name="blob">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary"/>
    </xs:simpleType>
        <xs:simpleType mmedt:UUID="mmuuid:5a793100-1836-1ed0-ba0f-f2334f5fbf96" mmedt:runtimeDataType="geometry" mmedt:runtimeDataTypeFixed="false" name="geometry">
        <xs:annotation>
            <xs:appinfo/>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary"/>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:43f5274e-55e1-1f87-ba1c-eea49143eb32" mmedt:runtimeDataType="xml" mmedt:runtimeDataTypeFixed="false" name="XMLLiteral">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] XMLLiteral represents XML content.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:string"/>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:28d98540-b3e7-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="duration">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] duration represents a
                duration of time. The value space of duration is a
                six-dimensional space where the coordinates designate
                the Gregorian year, month, day, hour, minute, and second
                components defined in 5.5.3.2 of [ISO 8601],
                respectively. These components are ordered in their
                significance by their order of appearance i.e. as year,
                month, day, hour, minute, and second.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:duration">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:5c69dec0-b3ea-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="timestamp" mmedt:runtimeDataTypeFixed="false" name="dateTime">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] dateTime represents a
                specific instant of time. The value space of dateTime is
                the space of Combinations of date and time of day values
                as defined in 5.4 of [ISO 8601].</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:dateTime">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:17d08040-b3ed-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="timestamp" mmedt:runtimeDataTypeFixed="false" name="gYearMonth">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] gYearMonth represents a
                specific gregorian month in a specific gregorian year.
                The value space of gYearMonth is the set of Gregorian
                calendar months as defined in 5.2.1 of [ISO 8601].
                Specifically, it is a set of one-month long,
                non-periodic instances e.g. 1999-10 to represent the
                whole month of 1999-10, independent of how many days
                this month has.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:gYearMonth">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:b02c7600-b3f2-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="gYear">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] gYear represents a gregorian
                calendar year. The value space of gYear is the set of
                Gregorian calendar years as defined in 5.2.1 of [ISO
                8601]. Specifically, it is a set of one-year long,
                non-periodic instances e.g. lexical 1999 to represent
                the whole year 1999, independent of how many months and
                days this year has.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:gYear">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:6e604140-b3f5-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="timestamp" mmedt:runtimeDataTypeFixed="false" name="gMonthDay">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] gMonthDay is a gregorian
                date that recurs, specifically a day of the year such as
                the third of May. Arbitrary recurring dates are not
                supported by this datatype. The value space of gMonthDay
                is the set of calendar dates, as defined in 3 of [ISO
                8601]. Specifically, it is a set of one-day long,
                annually periodic instances.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:gMonthDay">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:860b7dc0-b3f8-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="gDay">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] gDay is a gregorian day that
                recurs, specifically a day of the month such as the 5th
                of the month. Arbitrary recurring days are not supported
                by this datatype. The value space of gDay is the space
                of a set of calendar dates as defined in 3 of [ISO
                8601]. Specifically, it is a set of one-day long,
                monthly periodic instances.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:gDay">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:187f5580-b3fb-1e2a-9a03-beb8638ffd21" mmedt:runtimeDataType="biginteger" mmedt:runtimeDataTypeFixed="false" name="gMonth">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] gMonth is a gregorian month
                that recurs every year. The value space of gMonth is the
                space of a set of calendar months as defined in 3 of
                [ISO 8601]. Specifically, it is a set of one-month long,
                yearly periodic instances.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:gMonth">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:6247ec80-e8a4-1e2a-b433-fb67ea35c07e" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="anyURI">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] anyURI represents a Uniform
                Resource Identifier Reference (URI). An anyURI value can
                be absolute or relative, and may have an optional
                fragment identifier (i.e., it may be a URI Reference).
                This type should be used to specify the intention that
                the value fulfills the role of a URI as defined by [RFC
                2396], as amended by [RFC 2732].</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:anyURI">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:eeb5d780-e8c3-1e2a-b433-fb67ea35c07e" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="QName">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] QName represents XML
                qualified names. The value space of QName is the set of
                tuples {namespace name, local part}, where namespace
                name is an anyURI and local part is an NCName. The
                lexical space of QName is the set of strings that match
                the QName production of [Namespaces in XML].</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:QName">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:3dcaf900-e8dc-1e2a-b433-fb67ea35c07e" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="NOTATION">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] NOTATION represents the
                NOTATION attribute type from [XML 1.0 (Second Edition)].
                The value space of NOTATION is the set QNames. The
                lexical space of NOTATION is the set of all names of
                notations declared in the current schema. NOTATION
                cannot be used directly in a model; rather a type must
                be derived from it by specifying at least one
                enumeration facet whose value is the name of a NOTATION
                declared in the model.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:NOTATION">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:d9998500-ebba-1e2a-9319-8eaa9b2276c7" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="hexBinary">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] hexBinary represents
                arbitrary hex-encoded binary data. The value space of
                hexBinary is the set of finite-length sequences of
                binary octets.</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:hexBinary">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:b4c99380-ebc6-1e2a-9319-8eaa9b2276c7" mmedt:runtimeDataType="string" mmedt:runtimeDataTypeFixed="false" name="base64Binary">
        <xs:annotation>
            <xs:appinfo/>
            <xs:documentation>[Definition:] base64Binary represents
                Base64-encoded arbitrary binary data. The value space of
                base64Binary is the set of finite-length sequences of
                binary octets. For base64Binary data the entire binary
                stream is encoded using the Base64
                Content-Transfer-Encoding defined in Section 6.8 of [RFC 2045].</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary">
            <xs:whiteSpace fixed="true" value="collapse"/>
        </xs:restriction>
    </xs:simpleType>
    <xs:simpleType mmedt:UUID="mmuuid:606b7f4f-08a2-4072-86e2-9915f3952c7d" mmedt:runtimeDataType="varbinary" mmedt:runtimeDataTypeFixed="false" name="varbinary">
        <xs:annotation>
            <xs:documentation> The runtime type is a byte[] wrapper called BinaryType</xs:documentation>
        </xs:annotation>
        <xs:restriction base="xs:base64Binary"/>
    </xs:simpleType>
</xs:schema>
