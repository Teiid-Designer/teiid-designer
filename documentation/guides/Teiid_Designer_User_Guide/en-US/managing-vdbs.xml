<?xml version="1.0" encoding="UTF-8"?>

<chapter id="managing-vdbs-chapter">
  <title>Managing VDBs</title>
  	
	<para>As stated in the introduction, the critical artifact for Teiid Designer the VDB, or Virtual DataBase. This 
		section describes the details of how to create, edit, deploy and test your VDBs.
	</para>
	
	<!-- ####### VDB CONTENT and STRUCTURE ######################################### -->
	
	<section id="create-vdb">
		<title>Creating a VDB</title>
		<para>To create an empty VDB launch Eclipse's <emphasis role="bold">New</emphasis> wizard, open the 
			<emphasis role="bold">Teiid Designer</emphasis> category folder and select
			<emphasis role="bold">Teiid VDB</emphasis>. You can also select one or more models in a model project, 
			right-click and select <emphasis role="bold">New > Teiid VDB</emphasis> action.> 
		</para>
		<para>Launching this wizard will open the New VDB dialog. If you launched with one or more models selected
			the dialog will contain the pre-selected models for inclusion in the new VDB.
		</para>
		<figure>
			<title>New VDB Dialog</title>
			<mediaobject>
				<imageobject>
					<imagedata fileref="images/screencaps/new-vdb-wizard.png"/>
				</imageobject>
			</mediaobject>
		</figure>
        <note>
		      <para>A VDB is scoped to be aware of models and files within the same model project as the VDB. You 
			     will not be allowed to add models to a VDB that exist in a different project.
		      </para>
        </note>
	</section>
	
	<section id="edit-vdb">
		<title>Editing a VDB</title>
		<para>To Edit an existing VDB, select the VDB in the explorer and right-click select Open action or simply
			double-click the VDB. The VDB will be opened in a VDB Editor. (See the <xref linkend="vdb-editor-section" /> section)
		</para>
	</section>
	
	<section id="test-vdb">
		<title>Test a VDB</title>
		<para> For details on how to test your VDB, see 
			   <xref linkend="test-vdb-section" /> section
		</para>
	</section>
	
	<section id="reuse-vdbs">
		<title>Reusing VDBs</title>
		<para>Teiid 8.1 introduced the ability to treat your deployed VDB as just another database where the 
			database category is your VDB name and each visible model in your VDB is treated as a schema. 
			This is accomplished via a new &lt;import-vdb&gt; element in the vdb.xml definition. 
			(see <ulink url="https://docs.jboss.org/author/display/TEIID/VDB+Reuse">Teiid 8.2 VDB Reuse section</ulink>). 
			By allowing VDB's to referenced other VDBs, users can create reusable database components and reduce 
			the amount of modeling required to create complex transformations.</para>

 

		<para>The sample vdb.xml file below highlights the &lt;import-vdb&gt; element and the corresponding 
			import-vdb-reference within the view model's &lt;model&gt; element.
		</para>
		
<synopsis>
&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;
&lt;vdb version="1" name="PartssupplierViewsVDB"&gt;
    &lt;property value="false" name="preview"/&gt;
    &lt;import-vdb import-data-policies="false" version="1" name="PartssupplierSourcesVDB"/&gt;
    &lt;model visible="true" type="VIRTUAL" name="PartsViewModel" path="/PartssupplierProject/PartsViewModel.xmi"&gt;
        &lt;property value="1623826484" name="checksum"/&gt;
        &lt;property value="Relational" name="modelClass"/&gt;
        &lt;property value="false" name="builtIn"/&gt;
        &lt;property value="655076658.INDEX" name="indexName"/&gt;
        &lt;property value="PartssupplierSourcesVDB" name="import-vdb-reference"/&gt;
    &lt;/model&gt;
&lt;/vdb&gt;
</synopsis>

		<para>Teiid Designer exposes this capability by allowing users to import metadata from deployed VDBs via 
			the JDBC Import option. Through this import, relational VDB source models are created which 
			structurally represent the Catalog (VDB), Schema (Model) and Tables in Virtual DataBase.
		</para>

		<para>When dealing with the these VDB source models there are some limitations or rules, namely:
			<itemizedlist>
				<listitem>
					<para> VDB source models are read-only</para>
				</listitem>
				<listitem>
					<para> VDB source model name is determined by the deployed model name (schema) from the VDB it 
						was imported from</para>
				</listitem>
				<listitem>
					<para> Model names have to be unique within a model project</para>
					<itemizedlist>
						<listitem>
							<para> VDB source models have to be imported/created in a project different than the project 
								used to create and deploy the Reuse VDB
		    				</para>
						</listitem>
					</itemizedlist>
				</listitem>
				<listitem>
					<para> The JDBC Import Wizard will restrict your options to comply with these rules</para>
				</listitem>
			</itemizedlist>
		</para>
 

		<para>To create a VDB source model:</para>
		<itemizedlist>
			<listitem>
				<para><emphasis role="bold">Step 1 </emphasis> - Deploy your VDB
				</para>
			</listitem>
			<listitem>
				<para><emphasis role="bold">Step 2 </emphasis> - Launch the JDBC Import Wizard via the 
					"<emphasis role="bold">Import &gt; Teiid Designer &gt; JDBC Database &gt;&gt; Source Model</emphasis>" action
				</para>
			</listitem>
			<listitem>
				<para><emphasis role="bold">Step 3 </emphasis> - On the first page of the wizard create/select 
					a valid connection profile for your deployed VDB.
					<itemizedlist>
						<listitem>
   							<para>The wizard will detect that the connection profile is a Teiid VDB connection 
   								and a section will be displayed on the wizard page titled 
   								<emphasis role="bold">Teiid VDB Source Options</emphasis>
   							</para>
   						</listitem>
   						<listitem>
   						    <para>If <emphasis role="bold">Import as VDB source model</emphasis> is NOT checked, 
   						    	then the wizard will continue importing as a normal JDBC import
   							</para>
   						</listitem>
   					</itemizedlist>
				</para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/screencaps/jdbc-import-page-1-vdb-source.png"/>
					</imageobject>
				</mediaobject>
			</listitem>
			<listitem>
				<para><emphasis role="bold">Step 4 </emphasis> - On the 3rd page, titled 
					<emphasis role="bold">Select Database Objects</emphasis>, select a single schema to use to 
					create as VDB source model.</para>
                <note>
                    <para>The schema names are the names of the visible models in your deployed VDB.</para>
                </note>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/screencaps/jdbc-import-page-3-vdb-source-error.png"/>
					</imageobject>
				</mediaobject>
			</listitem>
			<listitem>
				<para><emphasis role="bold">Step 5 </emphasis> - The final page shows the name of the resulting 
					VDB source model and the name is NOT editable.
					<itemizedlist>
						<listitem>
   							<para>All other options are disabled
   							</para>
   						</listitem>
   						<listitem>
   						    <para>The target <emphasis role="bold">Into Folder</emphasis> must NOT contain a model 
   						    	with the same name or the <emphasis role="bold">Finish</emphasis> button will be disabled
   							</para>
   						</listitem>
   					</itemizedlist>
				</para>
				<mediaobject>
					<imageobject>
						<imagedata fileref="images/screencaps/jdbc-import-page-4-vdb-source.png"/>
					</imageobject>
				</mediaobject>
			</listitem>
		</itemizedlist>
		<para>You can use your VDB source model like any other source model in your project. 
			VDB source model tables can be used in your transformation queries and the view models 
			will contain model imports to your VDB source models. However, when your view model is added to a 
			VDB, any referenced VDB source models do NOT get added to your VDB. 
			Instead, an &lt;import-vdb&gt; element (described above) reference is added in it's place.
		</para>
		<para>If VDB imports exist for a VDB, the <emphasis role="bold">Show Import VDBs</emphasis> button will be 
			enabled and allow viewing the names of the imported VDBs as shown below.
		</para>
		<mediaobject>
			<imageobject>
				<imagedata fileref="images/screencaps/show-import-vdbs-dialog.png"/>
			</imageobject>
		</mediaobject>
	</section>
	
</chapter>