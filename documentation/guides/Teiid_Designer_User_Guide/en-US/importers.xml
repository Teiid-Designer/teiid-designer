<?xml version='1.0'?>
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V4.5//EN" "http://www.oasis-open.org/docbook/xml/4.5/docbookx.dtd">
<chapter id="importers-chapter">
	<title>Importers</title>
	<!-- 
		&amp;amp;amp;amp;amp;amp;amp;amp;lt;para&amp;amp;amp;amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;amp;amp;amp;lt;emphasis 
		role=&amp;amp;amp;amp;amp;amp;amp;amp;quot;bold&amp;amp;amp;amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;amp;amp;amp;gt;Go 
		To: &amp;amp;amp;amp;amp;amp;amp;amp;lt;ulink 
		url=&amp;amp;amp;amp;amp;amp;amp;amp;quot;index.html&amp;amp;amp;amp;amp;amp;amp;amp;quot;&amp;amp;amp;amp;amp;amp;amp;amp;gt;Table 
		of 
		Contents&amp;amp;amp;amp;amp;amp;amp;amp;lt;/ulink&amp;amp;amp;amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;amp;amp;amp;lt;/emphasis&amp;amp;amp;amp;amp;amp;amp;amp;gt;&amp;amp;amp;amp;amp;amp;amp;amp;lt;/para&amp;amp;amp;amp;amp;amp;amp;amp;gt;
	 -->
	<para>The <emphasis role="bold">Import Wizard</emphasis> provides a 
	means to create a model based on the structure of a data source, to 
	convert existing metadata (i.e. <emphasis role="bold">WSDL</emphasis> 
	or <emphasis role="bold">XML Schema</emphasis>) into a source model or 
	to load existing metadata files into the current VDB.</para>
	<para>To launch the <emphasis role="bold">Import Wizard</emphasis>, 
	choose the <emphasis role="bold">File &gt; Import</emphasis> action or 
	select a project, folder or model in the tree and right-click choose 
	&quot;<emphasis role="bold">Import...</emphasis>&quot;</para>
	<figure>
		<title>Import Wizard</title>
		<mediaobject><imageobject>
		<imagedata fileref="images/screencaps/teiid-designer-import-options.png"/>
		</imageobject></mediaobject>
	</figure>
	<!-- 
		####### DDL IMPORTER #########################################
	 -->
	<section id="ddl-import-section">
		<title>Import DDL</title>
		<para>Source relational models can be created by importing DDL.</para>
		<itemizedlist>
			<listitem>
				<para>You can create relational source models from your DDL using 
				the steps below.</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; DDL File 
						&gt;&gt; Source or View Model</emphasis> and click 
						<emphasis role="bold">Next&gt;</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - Select existing 
						DDL from either <guimenuitem>Choose from file 
						system...</guimenuitem> or <guimenuitem>Choose from 
						workspace...</guimenuitem>. set the Model folder location, enter 
						or select valid model name, set Model type (Source Model or View 
						Model), set desired options and click <emphasis>
						NEXT&gt;</emphasis> (or <emphasis>Finish</emphasis> if 
						enabled)</para>
						<figure>
							<title>DDL Import Options</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-ddl-options-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - If <emphasis>
						NEXT&gt;</emphasis> is pressed, a difference report is presented 
						for viewing or de-selecting individual relational entities. Press 
						<emphasis>Finish</emphasis> to complete.</para>
						<figure>
							<title>Review DDL Updates Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-ddl-differences-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>
	<!-- 
		####### JDBC IMPORTER #########################################
	 -->
	<section id="jdbc-import-section">
		<title>Import From Relational Database</title>
		<itemizedlist>
			<listitem>
				<para>You can create source models from your relational source 
				schema data using the steps below.</para>
				<note>
					<para>Depending the detail provided in the database connection url 
					information and schema, Steps 5 through 7 may not be 
					required.</para>
				</note>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; JDBC Database 
						&gt;&gt; Source Model</emphasis> and click <emphasis role="bold">
						Next&gt;</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - Select existing 
						or previous connection profile from the drop-down selector or 
						press <emphasis role="bold">New...</emphasis> button to launch 
						the <emphasis role="bold">New Connection Profile</emphasis> 
						dialog (See Eclipse Data Tools documentation) or 
						<emphasis role="bold">Edit...</emphasis> to modify/change an 
						existing connection profile prior to selection.</para>
						<note>
							<para>the Connection Profile selection list will be populated 
							with only JDBC Database connections.</para>
						</note>
						<figure>
							<title>Select JDBC Source Configuration Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/jdbc-importer-page-2A.png"/>
							</imageobject></mediaobject>
						</figure>
						<para>Because relational databases are different, special 
						processing of your metadata to be required in order to convert 
						datatypes or to interpret your metadata. The 
						<emphasis role="bold">JDBC Metadata Processor</emphasis> 
						drop-down selector will be auto-selected based on your selected 
						connection profile. Special processors are available for DB2, 
						Modeshape, ODBC, Oracle, PostgeSQL, SQL Server and Sybase. For 
						all other DB&apos;s ajdefault JDBC processor is available.</para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - After selecting a 
						<emphasis>Connection Profile</emphasis>, input password (if not 
						provided). Press <emphasis role="bold">Next&gt;</emphasis> (or 
						<emphasis role="bold">Finish</emphasis> if enabled)</para>
						<figure>
							<title>Select JDBC Source Configuration Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/jdbc-importer-page-2B.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5</emphasis> - On the 
						<emphasis role="bold">Select Database Metadata</emphasis> page, 
						select the types of objects in the database to import. Press 
						<emphasis role="bold">Next&gt;</emphasis> (or 
						<emphasis role="bold">Finish</emphasis> if enabled).</para>
						<figure>
							<title>Select Database Metadata Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/jdbc-importer-page-3.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 6</emphasis> - On the 
						<emphasis role="bold">Select Database Objects</emphasis> page, 
						view the contents of the schema, or change selections. Select 
						which database schema objects will be used to construct 
						relational objects. Press <emphasis role="bold">
						Next&gt;</emphasis> (or <emphasis role="bold">Finish</emphasis> 
						if enabled)</para>
						<figure>
							<title>Select Database Options Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/jdbc-importer-page-4.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 7</emphasis> - On the 
						<emphasis role="bold">Specify Import Options</emphasis> page, 
						specify desired <emphasis role="bold">Model Name</emphasis> as 
						well as any other options used to customize the naming of your 
						relational objects. Press <emphasis role="bold">Finish</emphasis> 
						to complete.</para>
						<figure>
							<title>Specify Import Options Dialog - Relational Model Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/jdbc-importer-page-5A.png"/>
							</imageobject></mediaobject>
						</figure>
						<figure>
							<title>Specify Import Options Dialog - Object Naming Options </title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/jdbc-importer-page-5B.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<para>During the <emphasis>Finish</emphasis> processing, a monitor 
		will be displayed providing feedback on the import progress.</para>
		<figure>
			<title>JDBC Import Progress Dialog</title>
			<mediaobject><imageobject>
			<imagedata fileref="images/screencaps/jdbc-importer-page-6.png"/>
			</imageobject></mediaobject>
		</figure>
		<!-- 
			####### RELATIONAL MODEL COSTING 
			#########################################
		 -->
		<section id="relational-import-model-costing-section">
			<title>Relational Model Costing</title>
			<para>On the final page of import, you are presented with a checkbox 
			option to <emphasis role="bold">Include Cost Statistics</emphasis>. 
			If this option is selected, the table cardinalities will be 
			determined and the table cardinality properties will be set. Later, 
			during query execution, if the table cardinalities are available 
			they are used by the Teiid query engine to optimize the query 
			plan.</para>
			<para>After import, you can update the cardinalities at any time. If 
			you would like to update the Cost Statistics for the entire model, 
			select the model - then use the Modeling Context menu action 
			<emphasis role="bold">Update Source Data Statistics</emphasis>. 
			Likewise, you can update the cardinality for a specific table or 
			tables, by selecting the table(s) in ModelExplorer then using the 
			same <emphasis role="bold">Update Source Data Statistics</emphasis> 
			action.</para>
		</section>
	</section>
	<!-- 
		####### TEIID DATA SOURCE IMPORTER 
		#########################################
	 -->
	<section id="teiid-connection-import-section">
		<title>Import From Teiid Data Source Connection</title>
		<para>The <emphasis role="bold">Teiid Connection &gt;&gt; Source 
		Model</emphasis> import option provides a means to create relational 
		source models from relational and other deployed data sources that 
		are not supported by other Teiid Designer importers.</para>
		<para>NOTE: To launch this importer, you must have at minimum a Teiid 
		8.x server running in Designer. The Teiid importer deploys a dynamic 
		VDB to Teiid containing the selected source type, then the schema (as 
		determined by Teiid) is retrieved. We expect to move towards this 
		type of import in future versions of Teiid Designer.</para>
		<itemizedlist>
			<listitem>
				<para>You can create relational source models from your deployed 
				data source connections using the steps below.</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; Teiid Connection 
						&gt;&gt; Source Model</emphasis> and click <emphasis role="bold">
						Next&gt;</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - Select the 
						datasource to use for the import. You can create a new source if 
						it doesnt exist, as well as other source management functions. 
						Click <emphasis role="bold">NEXT&gt;</emphasis> to 
						continue.</para>
						<figure>
							<title>Select Deployed Data Source</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-connection-importer-select-datasource-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - On the next page 
						select the appropriate translator for your data source type as 
						well as defined the target relational model that you wish to 
						create or update. You can also specify value for any built-in 
						import properties in order to fine-tune the schema data you wish 
						to have returned. Click <emphasis role="bold">NEXT&gt;</emphasis> 
						to continue.</para>
						<figure>
							<title>Translator and Model Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-connection-importer-options-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5</emphasis> - On the next page 
						define your target relational model that you wish to create or 
						update. Either enter a new unique name, or select an existing 
						source model. At this point you can click on the <emphasis>Show 
						Dynamic VDB Content...</emphasis> button to display the vdb.xml 
						that will be temporarily deployed to Teiid in order to return the 
						requested database schema/DDL. Click <emphasis role="bold">
						NEXT&gt;</emphasis> to continue.</para>
						<figure>
							<title>Target Model Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-connection-importer-target-model-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 6</emphasis> - When you move to 
						next page of the wizard, a temporary dynamic vdb is actually 
						deployed to you rserver and the schema your data source is 
						retrieved in DDL form. This DDL is displayed (and can also be 
						exported if desired). Click <emphasis role="bold">
						NEXT&gt;</emphasis> to continue.</para>
						<figure>
							<title>Review DDL Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-connection-importer-ddl-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 7</emphasis> - On the final page 
						of the wizard, a difference report is presented for viewing or 
						de-selecting individual relational entities. Press 
						<emphasis role="bold">Finish</emphasis> to complete.</para>
						<figure>
							<title>Review Model Updates Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-connection-importer-difference-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>
	<!-- 
		####### FLAT FILE IMPORTER #########################################
	 -->
	<section id="flat-file-import-section">
		<title>Import From Flat File Source</title>
		<itemizedlist>
			<listitem>
				<para>You can import metadata from your flat file data sources and 
				create the metamodels required to query your data in minutes. Using 
				the steps below you will define your flat file data source, 
				configure your parsing paramaters for the flat file, generate a 
				source model containing the standard Teiid flat file procedure and 
				create view tables containing the SQL defining the column data in 
				your flat file.</para>
				<para>Teiid supports Flat Files as data sources. Teiid Designer 
				provides an Import wizard designed to assist in creating the 
				metadata models required to access the data in your flat files. As 
				with Designer&apos;s JDBC, Salesforce and WSDL importers, the Flat 
				File importer is based on utilizing a specific Data Tools 
				Connection Profile.</para>
				<para>The results of the importer will include a source model 
				containing the getTextFiles() procedures supported by Teiid.</para>
				<para>The importer will also create a new view model containing a 
				view table for your selected flat file source file. Within the view 
				table will be generated SQL transformation containing the 
				&quot;getTextFiles()&quot; procedure from your source model as well 
				as the column definitions and parameters required for the Teiid 
				TEXTTABLE() function used to query the data file. You can also 
				choose to update an existing view model instead of creating a new 
				view model.</para>
				<para>The TEXTTABLE function, as defined in the Teiid 
				documentation, processes character input to produce tabular ouptut. 
				It supports both fixed and delimited file format parsing. The 
				function itself defines what columns it projects. The TEXTTABLE 
				function is implicitly a nested table and may be correlated to 
				preceeding FROM clause entries.</para>
				<synopsis format="TEXTTABLE">TEXTTABLE(expression COLUMNS &lt;COLUMN&gt;, ... 
				[DELIMITER char] [(QUOTE|ESCAPE) char] [HEADER [integer]] [SKIP 
				integer]) AS name</synopsis>
				<para>Teiid Designer will construct the full SQL statement for each 
				view table in the form: <synopsis format="SELECT">SELECT A.Name, A.Sport, 
				A.Position, A.Team, A.City, A.StateCode, A.AnnualSalary FROM (EXEC 
				PlayerDataSource.getTextFiles(&apos;PlayerData.txt&apos;)) AS f, 
				TEXTTABLE(f.file COLUMNS Name string, Sport string, Position 
				string, Team string, City string, StateCode string, AnnualSalary 
				string HEADER 2 SKIP 3) AS A</synopsis></para>
				<para>To import from your flat file source follow the steps 
				below.</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; File Source 
						(Flat) &gt;&gt; Source and View Model</emphasis> and click 
						<emphasis role="bold">Next&gt;</emphasis></para>
						<figure>
							<title>Import from Flat File Source</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-designer-import-options.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - On the first 
						wizard page, select the flat file mode you wish to import, either 
						<emphasis role="bold">Flat file on local file system</emphasis> 
						or <emphasis role="bold">Flat file via remote 
						URL</emphasis></para>
						<figure>
							<title>Flat File Source Model Options</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-flat-file-url-source-selection-page.png"/>
							</imageobject></mediaobject>
						</figure>
						<para>Note that the local file system connection specifies a 
						folder containing one or more comma separated text data file : 
						<emphasis role="bold">/home/jdoe/employees/</emphasis>. The 
						remote URL connection will specify a URL to a single data file : 
						<emphasis role="bold">
						http://download.jboss.org/teiid/designer/data/employees/file/EMPLOYEEDATA.txt</emphasis>.</para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - Select existing 
						or previous connection profile from the drop-down selector or 
						press <guibutton>New...</guibutton> button to launch the 
						<guilabel>New Connection Profile</guilabel> dialog (See Eclipse 
						Data Tools documentation) or <guibutton>Edit...</guibutton> to 
						modify/change an existing connection profile prior to 
						selection.</para>
						<note>
							<para>The Flat File Source selection list will be populated with 
							only Flat File connection profiles.</para>
						</note>
						<para>After selecting a <emphasis role="bold">Connection 
						Profile</emphasis>, the file contents of the folder defined in 
						the connection profile will be displayed in the 
						<emphasis role="bold">Available Data Files</emphasis> panel. 
						Check the the data file you wish to process. The data from this 
						file, along with your custom import options, will be used to 
						construct a view table containing the required SQL transformation 
						for retrieving your data and returning a result set.</para>
						<para>Lastly enter or unique source model name in the 
						<emphasis role="bold">Source Model Definition</emphasis> section 
						at the bottom of the page or select an existing source model 
						using the browse button.</para>
						<note>
							<para>The <emphasis role="bold">Model Status</emphasis> section 
							which will indicate the validity of the model name, whether the 
							model exists or not and whether the model already contains the 
							getTextFiles() procedure. In this case, the source model nor the 
							procedure will be generated.</para>
						</note>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>Data File Source Selection Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-flat-file-source-page-1.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5</emphasis> - The next page, 
						titled <emphasis role="bold">Data Source Definition Options</emphasis>, 
						provides the option for defining a unique JBoss JNDI name for the deployed 
						data source that this imported model will prepresent. This name will be 
						stored as a property on your model and changeable via the 
						<emphasis role="bold">Modeling &gt; Set JBoss JNDI Data Source Name</emphasis> action. 
						If there you have a default server defined and running, then
						<emphasis role="bold">Auto-Create Data Source</emphasis> check box will be enabled.
						On completion of this import, the wizard will check for an existing deployed data source
						with this JNDI name and create one if needed.</para>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>Data File Source Selection Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/data-source-definition-options-page-flat-file.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 6</emphasis> - The next page, 
						titled <emphasis role="bold">Flat File Column Format 
						Definition</emphasis>, requires defining the format of your 
						column data in the file. The options are <guibutton>Character 
						delimited</guibutton> and <guibutton>Fixed width</guibutton>. 
						This page contains a preview of the contents of your file to aid 
						in determining the format. The wizard defaults to displaying the 
						first 20 lines, but you can change that value if you wish.</para>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>Data File Source Selection Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-flat-file-source-page-2.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 7a : Character Delimited 
						Option</emphasis> - The primary purpose of this importer is to 
						help you create a view table containing the transformation 
						required to query the user-defined data file. This page presents 
						a number of options you can use to customize the 
						<emphasis role="bold">Generated SQL Statement</emphasis> , shown 
						in the bottom panel, for the character delimited option. Specify 
						header options (Column names in header, header line number and 
						first data line number), Parse selected row, changed character 
						delimiter and edit the TEXTTABLE() function options. See the 
						Teiid User&apos;s Guide for details on the TEXTTABLE() 
						function.</para>
						<para>If columns names are not defined in a file header or if you 
						wish to modify or create custom columns, you can use the 
						<guibutton>ADD</guibutton>, <guibutton>DELETE</guibutton>, 
						<guibutton>UP</guibutton>, <guibutton>DOWN</guibutton> to manage 
						the column info in your SQL.</para>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>Flat File Delimited Columns Options Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-flat-file-source-page-3_delimited.png"/>
							</imageobject></mediaobject>
						</figure>
						<para>To aid in determining if your parser settings are correct 
						you can select a data row in your <emphasis role="bold">File 
						Contents Preview</emphasis> section and click the 
						<emphasis role="bold">Parse Selected Row</emphasis> button. A 
						dialog will be displayed showing the list of columns and the 
						resulting column data. If your column data is not what you 
						expected, you&apos;ll need to adjust your settings 
						accordingly.</para>
						<figure>
							<title>Parse Column Data Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-flat-file-parse-column-dialog.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 7b : Fixed Column Width 
						Option</emphasis> - The primary purpose of this importer is to 
						help you create a view table containing the transformation 
						required to query the user-defined data file. This page presents 
						a number of options you can use to customize the 
						<emphasis role="bold">Generated SQL Statement</emphasis> , shown 
						in the bottom panel, for the fixed column width option. Specify 
						header options (Column names in header, header line number and 
						first data line number), Parse selected row, changed character 
						delimiter and edit the TEXTTABLE() function options. See the 
						Teiid User&apos;s Guide for details on the TEXTTABLE() 
						function.</para>
						<para>If columns names are not defined in a file header or if you 
						wish to modify or create custom columns, you can use the 
						<guibutton>ADD</guibutton>, <guibutton>DELETE</guibutton>, 
						<guibutton>UP</guibutton>, <guibutton>DOWN</guibutton> to manage 
						the column info in your SQL.</para>
						<para>You can also utilize the cursor postion and text length 
						values in the upper left panel to determine what your column 
						widths are in your data file.</para>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>Flat File Fixed Columns Width Options Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-flat-file-source-page-3_fixed.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 8</emphasis> - On the 
						<emphasis role="bold">View Model Definition</emphasis> page, 
						select the target folder location where your new view model will 
						be created. You can also select an existing model for your new 
						view tables.</para>
						<note>
							<para>The <emphasis role="bold">Model Status</emphasis> section 
							which will indicate the validity of the model name, whether the 
							model exists or not. Lastly, enter a unique, valid view table 
							name.</para>
						</note>
						<para>Press <emphasis role="bold">Finish</emphasis> to generate 
						your models and finish the wizard.</para>
						<figure>
							<title>View Model Definition Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-flat-file-source-page-4.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<para>When your import is finished your source model will be opened 
		in an editor and show a diagram containing the your getTextFiles() 
		procedure.</para>
		<figure>
			<title>Generated Flat File Procedures</title>
			<mediaobject><imageobject>
			<imagedata fileref="images/screencaps/import-flat-file-generated-flat-file-diagram.png"/>
			</imageobject></mediaobject>
		</figure>
		<para>In addition, the view model will be opened in an editor and 
		will show the generated view tables containing the completed SQL 
		required to access the data in your flat file using the 
		&quot;getTextFiles&quot; procedure above and the Teiid TEXTTABLE() 
		function. The following figure is an example of a generated view 
		table.</para>
		<figure>
			<title>Generated Flat File View Table</title>
			<mediaobject><imageobject>
			<imagedata fileref="images/screencaps/import-flat-file-generated-flat-file-view-table.png"/>
			</imageobject></mediaobject>
		</figure>
	</section>
	<!-- 
		####### XML DATA FILE IMPORTER 
		#########################################
	 -->
	<section id="xml-data-file-import-section">
		<title>Import From XML Data File Source</title>
		<itemizedlist>
			<listitem>
				<para>Teiid supports XML Files as data sources. You can import from 
				these data sources and create the metamodels required to query your 
				data in minutes. Using the steps below you will define your flat 
				file data source, configure your parsing paramaters for the xml 
				data file, generate a source model containing the required Teiid 
				procedure and create a view table containing the SQL defining the 
				column data in your xml data file.</para>
				<para>As with Designer&apos;s JDBC, Salesforce and WSDL importers, 
				the XML File importer is based on utilizing a specific Data Tools 
				Connection Profile.</para>
				<para>The results of the importer will include a source model 
				containing the getTextFiles() procedure or invokeHTTP() procedure 
				which are both supported by Teiid.</para>
				<para>The importer will also create a new view model containing a 
				view table for your selected flat file source file. Within the view 
				table will be generated SQL transformation containing the 
				&quot;getTextFiles()&quot; procedure from your source model as well 
				as the column definitions and parameters required for the Teiid 
				XMLTABLE() function used to query the data file. You can also 
				choose to update an existing view model instead of creating a new 
				view model.</para>
				<para>The XMLTABLE function uses XQuery to produce tabular ouptut. 
				The XMLTABLE function is implicitly a nested table and may be 
				correlated to preceeding FROM clause entries. XMLTABLE is part of 
				the SQL/XML 2006 specification.</para>
				<synopsis format="XMLTABLE">XMLTABLE([&lt;NSP&gt;,] xquery-expression 
				[&lt;PASSING&gt;] [COLUMNS &lt;COLUMN&gt;, ... )] AS name</synopsis>
				<synopsis format="COLUMN">COLUMN := name (FOR ORDINALITY | (datatype [DEFAULT 
				expression] [PATH string]))</synopsis>
				<para>Teiid Designer will construct the full SQL statement for each 
				view table in the form: <synopsis format="SELECT">SELECT A.entryDate AS entryDate, 
				A.internalAudit AS internalAudit FROM (EXEC 
				CCC.getTextFiles(&apos;sample.xml&apos;)) AS f, 
				XMLTABLE(XMLNAMESPACES(&apos;http://www.kaptest.com/schema/1.0/party&apos; 
				AS pty), &apos;/pty:students/student&apos; PASSING 
				XMLPARSE(DOCUMENT f.file) COLUMNS entryDate FOR ORDINALITY, 
				internalAudit string PATH &apos;/internalAudit&apos;) AS 
				A</synopsis></para>
				<para>To import from your XML data file source follow the steps 
				below.</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; File Source 
						(XML) &gt;&gt; Source and View Model</emphasis> and click 
						<emphasis role="bold">Next&gt;</emphasis></para>
						<figure>
							<title>Import from XML File Source</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-designer-import-options.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - The next page of 
						the wizard allows selection of the XML Import mode that specifies 
						whether the XML file is local or remote. The description at the 
						top describes what operations this wizard will perform. Select 
						either the <guilabel>XML file on local file system</guilabel> or 
						<guilabel>XML file via remote URL</guilabel> and click 
						<emphasis role="bold">Next&gt;</emphasis></para>
						<figure>
							<title>XML Import File Options Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-xml-file-source-page-1.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - Select existing 
						or previous connection profile from the drop-down selector or 
						press <guibutton>New...</guibutton> button to launch the 
						<guilabel>New Connection Profile</guilabel> dialog (See Eclipse 
						Data Tools documentation) or <guibutton>Edit...</guibutton> to 
						modify/change an existing connection profile prior to 
						selection.</para>
						<para>After selecting a <emphasis role="bold">Connection 
						Profile</emphasis>, the XML data file from the connection profile 
						will be displayed in the <emphasis role="bold">Available Data 
						Files</emphasis> panel. Check the the data file you wish to 
						process. The data from this file, along with your custom import 
						options, will be used to construct a view table containing the 
						required SQL transformation for retrieving your data and 
						returning a result set.</para>
						<para>Lastly enter or unique source model name in the 
						<emphasis role="bold">Source Model Definition</emphasis> section 
						at the bottom of the page or select an existing source model 
						using the browse button.</para>
						<note>
							<para>The <emphasis role="bold">Model Status</emphasis> section 
							which will indicate the validity of the model name, whether the 
							model exists or not and whether the model already contains the 
							getTextFiles() procedure. In this case, the source model nor the 
							procedure will be generated.</para>
						</note>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>XML Data File Source Selection Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-xml-file-source-page-2.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5</emphasis> - The next page, 
						titled <emphasis role="bold">Data Source Definition Options</emphasis>, 
						provides the option for defining a unique JBoss JNDI name for the deployed 
						data source that this imported model will prepresent. This name will be 
						stored as a property on your model and changeable via the 
						<emphasis role="bold">Modeling &gt; Set JBoss JNDI Data Source Name</emphasis> action. 
						If there you have a default server defined and running, then
						<emphasis role="bold">Auto-Create Data Source</emphasis> check box will be enabled.
						On completion of this import, the wizard will check for an existing deployed data source
						with this JNDI name and create one if needed.</para>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>Data File Source Selection Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/data-source-definition-options-page-flat-file.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 6</emphasis> - The primary 
						purpose of this importer is to help you create a view table 
						containing the transformation required to query the user-defined 
						data file. This page presents a number of options you can use to 
						customize the <emphasis role="bold">Generated SQL 
						Statement</emphasis> , shown in the bottom panel. The to panel 
						contains an XML tree view of your file contents and 
						actions/buttons you can use to create column entries displayed in 
						the middle, <emphasis role="bold">Column Information</emphasis> 
						panel.</para>
						<para>To create columns, select a root XML element and 
						right-click select <guibutton>Set as root path</guibutton> 
						action. This populates the root path value. Next, select columns 
						in the tree that you wish to include on your query and select 
						<guibutton>Add selection as new column</guibutton> button. You 
						can also modify or create custom columns, by using the <guibutton>
						ADD</guibutton>, <guibutton>DELETE</guibutton>, <guibutton>
						UP</guibutton>, <guibutton>DOWN</guibutton> to manage the column 
						info in your SQL.</para>
						<note>
							<para>The <guibutton>Path</guibutton> property value for a 
							column is the selected element&apos;s path relative to the 
							defined root path. If no root path is defined all paths are 
							absolute. Each column entry requires a datatype and an optional 
							default value. See the Teiid User&apos;s Guide for details on 
							the XMLTABLE() function.</para>
						</note>
						<para>When finished with this page, click <emphasis role="bold">
						Next&gt;</emphasis>.</para>
						<figure>
							<title>XML File Delimited Columns Options Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-xml-file-source-page-3.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 7</emphasis> - On the 
						<emphasis role="bold">View Model Definition</emphasis> page, 
						select the target folder location where your new view model will 
						be created. You can also select an existing model for your new 
						view tables.</para>
						<note>
							<para>The <emphasis role="bold">Model Status</emphasis> section 
							which will indicate the validity of the model name, whether the 
							model exists or not. Lastly, enter a unique, valid view table 
							name.</para>
						</note>
						<para>Press <emphasis role="bold">Finish</emphasis> to generate 
						your models and finish the wizard.</para>
						<figure>
							<title>View Model Definition Page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-xml-file-source-page-4.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>
	<!-- 
		####### SALESFORCE IMPORTER #########################################
	 -->
	<section id="salesforce-import-section">
		<title>Import From Salesforce</title>
		<itemizedlist>
			<listitem>
				<para>You can create relational source models from your Salesforce 
				connection using the steps below.</para>
				<note>
					<para>Depending the detail provided in the database connection url 
					information and schema, Steps 5 through 7 may not be 
					required.</para>
				</note>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; Salesforce 
						&gt;&gt; Source Model</emphasis> and click <emphasis role="bold">
						Next&gt;</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - Select existing 
						or previous connection profile from the drop-down selector or 
						press <guibutton>New...</guibutton> button to launch the 
						<guilabel>New Connection Profile</guilabel> dialog (See Eclipse 
						Data Tools documentation) or <guibutton>Edit...</guibutton> to 
						modify/change an existing connection profile prior to 
						selection.</para>
						<note>
							<para>The Connection Profile selection list will be populated 
							with only Salesforce connection profiles.</para>
						</note>
						<figure>
							<title>Select Salesforce Credentials Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-salesforce-page-2.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - After selecting a 
						<emphasis>Connection Profile</emphasis>, input password (if not 
						provided). Press <emphasis role="bold">Next&gt;</emphasis> to 
						display the Salesforce Objects selection page.</para>
						<figure>
							<title>Select Salesforce Objects Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-salesforce-page-3.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5</emphasis> - On the 
						<emphasis role="bold">Target Model Selection</emphasis> page, 
						specify the target folder location for your generated model, a 
						unique model name and select desired import options. Press 
						<emphasis role="bold">Next&gt;</emphasis> (or 
						<emphasis role="bold">Finish</emphasis> if enabled).</para>
						<figure>
							<title>Target Model Selection Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-salesforce-page-4.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5a</emphasis> - If you are 
						updating an existing relational model, the next page will be 
						<emphasis role="bold">Review Model Updates</emphasis> page. Any 
						differences. Press <emphasis role="bold">Finish</emphasis> to 
						create your models and tables.</para>
						<figure>
							<title>Review Model Updates Dialog</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-salesforce-page-5.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<para>When finished, the new or changed relational model&apos;s 
		package diagram will be displayed showing your new tables.</para>
		<figure>
			<title>New Saleforce Tables Diagram</title>
			<mediaobject><imageobject>
			<imagedata fileref="images/screencaps/import-salesforce-page-6.png"/>
			</imageobject></mediaobject>
		</figure>
	</section>
	<!-- 
		####### TEXT FILE SOURCE IMPORTER 
		#########################################
	 -->
	<section id="text-file-import-section">
		<title>Import Metadata From Text File</title>
		<para/>
		<itemizedlist>
			<listitem>
				<para>
					The Teiid Designer provides various import options for parsing 
					comma delimited text file metadata into models. This is 
					accomplished via the 
					<emphasis role="bold">Import &gt; Teiid Designer &gt; Designer 
					Text File &gt;&gt; Source or View Models</emphasis>
					 option.
					<itemizedlist>
						<listitem>
							<para><emphasis role="bold">Step 1</emphasis> - In 
							<emphasis role="bold">Designer</emphasis> choose the 
							<emphasis role="bold">File &gt; Import</emphasis> action 
							<inlinemediaobject><imageobject>
							<imagedata fileref="images/icons/import-wiz.png"/>
							</imageobject></inlinemediaobject> in the toolbar or select a 
							project, folder or model in the tree and choose 
							<emphasis role="bold">Import...</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 2</emphasis> - Select the 
							import option <emphasis role="bold">Teiid Designer &gt; Designer 
							Text File &gt;&gt; Source or View Models</emphasis> and click 
							<emphasis role="bold">Next&gt;</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 3</emphasis> - Select an import 
							type via the drop-down menu shown below.</para>
							<figure>
								<title>Import Wizard</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-from-text-file-import-types.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</itemizedlist>
		<itemizedlist>
			<listitem>
				<para>
					These steps are required for each type are defined below:
					<itemizedlist>
						<listitem>
							<para><emphasis>
							<xref linkend="relational-model-xml-text-import-section"/>
							</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis>
							<xref linkend="relational-tables-text-import-section"/>
							</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis>
							<xref linkend="relational-virtual-tables-text-import-section"/>
							</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis><xref linkend="datatypes-text-import-section"/>
							</emphasis></para>
						</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</itemizedlist>
		<!-- 
			####### RELATIONAL MODEL XML TEXT IMPORTER 
			#########################################
		 -->
		<section id="relational-model-xml-text-import-section">
			<title>Import Relational Model (XML Format)</title>
			<itemizedlist>
				<listitem>
					<para>
						To create relational tables from imported xml text file metadata:
						<itemizedlist>
							<listitem>
								<para>Perform <emphasis role="bold">Steps 1 through 
								3</emphasis> (above) and select the <emphasis role="bold">
								Relational Model (XML Format)</emphasis> import type, then 
								click <emphasis role="bold">Next &gt;</emphasis></para>
								<figure>
									<title>Select Import Type - Relational Model (XML 
									Format)</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-relational-model-xml-page-1.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para>Perform <emphasis role="bold">Steps 4</emphasis> - On the 
								next page, select the XML file on your local file system via 
								the <guibutton>Browse...</guibutton> button. Select a target 
								model to which the imported relational objects will be added 
								via the second <guibutton>Browse...</guibutton> button. The 
								dialog allows selecting an existing relational model or 
								creating a new model.</para>
								<note>
									<para>The contents of your selected XML file will be display 
									in the File Contents viewer.</para>
								</note>
								<para>Click <emphasis role="bold">Finish</emphasis> to create 
								your new model.</para>
								<figure>
									<title>Select Source Text File and Target Relational Model 
									Page</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-relational-model-xml-page-2.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
						</itemizedlist>
					</para>
					<para>If the target model contains named children (tables, views, 
					procedures) that conflict with the objects being imported, a 
					dialog will be displayed giving you options on how to proceed 
					including: replacing specific existing objects, creating new 
					same-named objects or cancel import entirely.</para>
					<figure>
						<title>Duplicate Objects Dialog</title>
						<mediaobject><imageobject>
						<imagedata fileref="images/screencaps/import-relational-model-xml-duplicate-objects.png"/>
						</imageobject></mediaobject>
					</figure>
				</listitem>
			</itemizedlist>
		</section>
		<!-- 
			####### RELATIONAL TABLES TEXT IMPORTER 
			#########################################
		 -->
		<section id="relational-tables-text-import-section">
			<title>Import Relational Tables (CSV Format)</title>
			<para/>
			<itemizedlist>
				<listitem>
					<para>
						To create relational tables from imported text file metadata:
						<itemizedlist>
							<listitem>
								<para>Perform <emphasis role="bold">Steps 1 through 
								3</emphasis> (above) and select the <emphasis role="bold">
								Relational Tables (CSV Format)</emphasis> import type, then 
								click <emphasis role="bold">Next &gt;</emphasis></para>
								<figure>
									<title>Select Import Type - Relational Tables (CSV 
									Format)</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-from-text-file-page-2-relational.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 4</emphasis> - In the next 
								page, you&apos;ll need to provide a source text file containing 
								the metadata formatted to the specifications on the previous 
								page.</para>
								<figure>
									<title>Select Source Text File and Target Relational 
									Model</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-from-text-file-page-3-relational.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 5</emphasis> - Select an 
								existing relational model as the target location for your new 
								relational components using the <emphasis role="bold">
								Browse...</emphasis> button to open the Relational Model 
								Selector Dialog. Select a relational model from your workspace 
								or specify a unique name to create a new model.</para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 6</emphasis> - Select any 
								additional options and choose <emphasis role="bold">
								Finish</emphasis>.</para>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
			</itemizedlist>
		</section>
		<!-- 
			####### RELATIONAL VIRTUAL TABLES TEXT IMPORTER 
			#########################################
		 -->
		<section id="relational-virtual-tables-text-import-section">
			<title>Import Relational View Tables (CSV Format)</title>
			<para/>
			<itemizedlist>
				<listitem>
					<para>
						To create relational virtual tables from imported text file 
						metadata:
						<itemizedlist>
							<listitem>
								<para>Perform <emphasis role="bold">Steps 1 through 
								3</emphasis> (above) and select the <emphasis role="bold">
								Relational Virtual Tables (CSV Format)</emphasis> import type, 
								then click <emphasis role="bold">Next &gt;</emphasis></para>
								<figure>
									<title>Select Import Type - Relational Virtual Tables (CSV 
									Format)</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-from-text-file-page-2-virtual-tables.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 4</emphasis> - In the next 
								page, you&apos;ll need to provide a source text file containing 
								the metadata formatted to the specifications on the previous 
								page.</para>
								<figure>
									<title>Select Source Text File and Target Virtual Relational 
									Model</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-from-text-file-page-3-virtual-relational.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 5</emphasis> - Select an 
								existing relational virtual model as the target location for 
								your new model components using the <emphasis role="bold">
								Browse...</emphasis> button to open the Virtual Model Selector 
								Dialog. Select a virtual relational model from your workspace 
								or specify a unique name to create a new model.</para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 6</emphasis> - Select 
								<emphasis role="bold">Finish</emphasis>.</para>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
			</itemizedlist>
		</section>
	</section>
	<!-- 
		####### REST WEB SERVICE IMPORTER 
		#########################################
	 -->
	<section id="rest-web-service-import-section">
		<title>Import Data From REST Service</title>
		<itemizedlist>
			<listitem>
				<para>In addition to SOAP web services, Teiid supports REST web 
				services as data sources. Using the steps below you will define 
				your REST web service data source, select the elements to include 
				in your generated view table and generate a source model containing 
				the required Teiid procedure.</para>
				<para>To import from your target REST web service source:</para>
				<itemizedlist>
						<listitem>
							<para><emphasis role="bold">Step 1</emphasis> - In 
							<emphasis role="bold">Model Explorer</emphasis> choose the 
							<emphasis role="bold">File &gt; Import</emphasis> action in the 
							toolbar or select a project, folder or model in the tree and 
							choose <emphasis role="bold">Import...</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 2</emphasis> - Select the 
							import option <emphasis role="bold">Teiid Designer &gt; WSDL 
							File or URL &gt;&gt; Source and View Model (SOAP)</emphasis> and 
							click <emphasis role="bold">Next&gt;</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 3</emphasis> - On the next page 
							select an existing Web Service Connection Profile from the list, 
							or click the <emphasis role="bold">New</emphasis> Button to 
							create a new profile.</para>
							<figure>
								<title>WSDL Source Selection</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-wsdl-to-source-page-2.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 4</emphasis> - Select 
							individual <emphasis role="bold">Web Service 
							Operations</emphasis> to model. The default behavior of this 
							page selects <emphasis role="bold">all</emphasis> available 
							operations in the tree. Operations can be de-selected if they 
							are not being modeled. The Selection Details panel displays 
							static information about the operation such as the names of the 
							input and output messages, and faults thrown by the 
							operation.</para>
							<para>Click <emphasis role="bold">Next &gt;</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 5</emphasis> - The next page 
							entitled Model Definiton requires both a model location (i.e. 
							folder or project) and a valid model name for both source and 
							view models. Use the <emphasis role="bold">Browse...</emphasis> 
							button to select existing folders or models. Click 
							<emphasis role="bold">Next&gt;</emphasis> when all the 
							information is defined.</para>
							<figure>
								<title>WSDL Source Selection</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-wsdl-to-source-page-3.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 6</emphasis> - The next page, 
							titled <emphasis role="bold">Data Source Definition Options</emphasis>, 
							provides the option for defining a unique JBoss JNDI name for the deployed 
							data source that this imported model will prepresent. This name will be 
							stored as a property on your model and changeable via the 
							<emphasis role="bold">Modeling &gt; Set JBoss JNDI Data Source Name</emphasis> action. 
							If there you have a default server defined and running, then
							<emphasis role="bold">Auto-Create Data Source</emphasis> check box will be enabled.
							On completion of this import, the wizard will check for an existing deployed data source
							with this JNDI name and create one if needed.</para>
							<para>When finished with this page, click <emphasis role="bold">
							Next&gt;</emphasis>.</para>
							<figure>
								<title>Data File Source Selection Page</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-wsdl-to-source-page-4.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 7</emphasis> - The next page 
							entitled Operations Type Selection gives you the option to define custom procedures 
							(Recommended)shown in <emphasis role="bold">Step 8 below</emphasis>.
							or generate default procedures you can edit later. 
							button to select existing folders or models.
							If customer procedure is selected, click <emphasis role="bold">Next&gt;</emphasis> to proceed 
							or <emphasis role="bold">Finish</emphasis> if default option is selected</para>
							<figure>
								<title>WSDL Source Selection</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-wsdl-to-source-page-5.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 8</emphasis> - This wizard 
							generates both request and response procedures that are used in 
							the queryable wrapped procedure. The next page, Procedure 
							Definition, provides the means to define the details of your 
							request and response structures.</para>
							<para>In the Request tab, select and double-click the schema 
							elements you wish to be input parameters for your request. These 
							will be added to the Element Info panel and the resulting 
							generated SQL statement will be updated to reflect the new 
							element.</para>
							<note>
								<para>The BODY and HEADER tabs which exist on both the Request 
								and Response tabs. If the selected service mode for this 
								procedure is set to MESSAGE, the HEADER tab will be enabled and 
								allow you to define the SOAP header variables utilizing the 
								same schema tree.</para>
							</note>
							<para>Select the Response tab and create the response procedures 
							result set columns in the same way.</para>
							<para>Repeat this process for all operations by changing the 
							selection target operation via the <emphasis role="bold">
							Operations</emphasis> selector at the top.</para>
							<figure>
								<title>Procedure Definition Page</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-wsdl-to-source-page-6.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 7</emphasis> - Click 
							<emphasis role="bold">Finish</emphasis>. After generation the 
							new models can be found in the specified location in your 
							workspace.</para>
						</listitem>
					</itemizedlist>
			</listitem>
		</itemizedlist>
	</section>
	<!-- 
		####### SOAP WEB SERVICE IMPORTER 
		#########################################
	 -->
	<section id="soap-web-service-import-section">
		<title>Import Data From SOAP Service</title>
		<itemizedlist>
			<listitem>
				<para>In addition to REST web services, Teiid supports SOAP web 
				services as data sources. 
				This importer is accessed by launching Eclipse&apos;s &quot;Import...&quot; action 
				and selecting the &quot;Teiid Designer &gt; WSDL File or URL &gt;&gt; Source and View 
				Model (SOAP)&quot; option. <emphasis>Web Services Connection 
				Profile</emphasis> defined by a WSDL file in your workspace or 
				defined by a URL. Designer will interpret the WSDL, locate any 
				associated or dependent XML schema files, generate a physical model 
				to invoke the service, and generate virtual models containg 
				procedures to build and parse the XML declared as the service 
				messages.</para>
				<para>Using the steps below you will define 
				your SOAP web service data source, select the elements to include 
				in your generated view table and generate a source model containing 
				the required Teiid procedure.</para>
				<para>To import from your target SOAP web service source:</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; Web Service 
						Source &gt;&gt; Source and View Model (SOAP)</emphasis> and click 
						<guibutton>Next&gt;</guibutton></para>
						<figure>
							<title>Import from SOAP Web Service Source</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/teiid-designer-import-options.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - On the first page of the wizard, select an existing 
						or previous connection profile from the drop-down selector or 
						press <guibutton>New...</guibutton> button to launch the 
						<guilabel>New Connection Profile</guilabel> dialog or <guibutton>
						Edit...</guibutton> to modify/change an existing connection 
						profile prior to selection.</para>
						<figure>
							<title>Source and WSDL Operations Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-web-service-soap-page-1.png"/>
							</imageobject></mediaobject>
						</figure>

						<para>Name your new SOAP Connection Profile and click the 
						<guibutton>Next &gt;</guibutton></para>
						<figure>
							<title>New SOAP Connection Profile</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/create-web-service-soap-profile.png"/>
							</imageobject></mediaobject>
						</figure>
						<para>Set your Connection URL from either your workspace, your local file system or define 
						a remote URL. Click <guibutton>Next &gt;</guibutton> and select an endpoint and binding type,  click <guibutton>
						Finish</guibutton>.</para>
						<figure>
							<title>New SOAP Connection Profile Endpoint Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/create-web-service-soap-profile-page2.png"/>
							</imageobject></mediaobject>
						</figure>
						<para>Once the connection profile is defined, you can view the WSDL URL and validate it via the <guibutton>Validate WSDL</guibutton> button.
						Select Service Model and desired WSDL Operations and click <guibutton>Next &gt;</guibutton></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - On the <emphasis role="bold">Models Definition</emphasis>
						page, define your source and view model names and locations and click <guibutton>Next &gt;</guibutton></para>
						<figure>
							<title>Models Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-web-service-soap-page-2.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 5</emphasis> - On the <emphasis role="bold">Procedure Definition</emphasis>
						page, defined your request and response elements for each operation selected previously.
						When all operations are sufficiently defined click <guibutton>Finish</guibutton></para>
						<figure>
							<title>Procedure Definition</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-web-service-soap-page-3.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<para>In the <emphasis role="bold">Model Explorer</emphasis> you can 
		see the importer created the following a single <emphasis role="bold">
		physical model</emphasis> containing a single procedure called 
		invoke. This model and procedure correspond to the single port 
		declared in the WSDL.</para>
		<para>A single <emphasis role="bold">view model</emphasis> was also 
		created containing your new procedures named after the operations 
		declared in the WSDL. For each operation a wrapper procedure was 
		created which can be previewed in Designer. Below is an example 
		dependency diagram showing the sources for the wrapper procedure as 
		request, response procedures and the invoke() source procedure.</para>
		<figure>
			<title>Example Web Services Wrapper Procedure</title>
			<mediaobject><imageobject>
			<imagedata fileref="images/screencaps/import-wsdl-to-source-procedure-dependency-diagram.png"/>
			</imageobject></mediaobject>
		</figure>
		<section>
			<title>Circular References in WSDL Schemas</title>
			<para>It is possible for a WSDL schema to either contain a very deep 
			set of XML type references or indeed for such references to be 
			circular. This is legal in the WSDL schema but can make processing 
			the schema in Designer difficult. If left unchecked such circular 
			references can result in a JVM <emphasis role="bold">
			StackOverFlow</emphasis> exception and exiting of the 
			application.</para>
			<para>To mitigate this possibility a depth limit of 750 references 
			has been introduced. Should the depth exceed this limit then a 
			warning is displayed and further processing of that fragment of the 
			schema will end. It may be the case that the reference in question 
			is not circular but just very deep so in such a case it is possible 
			to increase the depth limit by setting the JVM property 
			<emphasis role="bold">WsdlSchemaHandlerRecursiveDepth</emphasis> to 
			a larger value, eg. -D WsdlSchemaHandlerRecursiveDepth=800. This 
			should only be used with caution as on some systems it is possible 
			the JVM throws a <emphasis role="bold">StackOverFlow</emphasis> 
			exception before the new depth limit is reached.</para>
			<figure>
				<title>Warning message displayed if depth limit has been 
				reached</title>
				<mediaobject><imageobject>
				<imagedata fileref="images/screencaps/import-wsdl-to-source-procedure-depth-limit-warning.png"/>
				</imageobject></mediaobject>
			</figure>
		</section>
	</section>
	<!-- 
		####### WSDL AS WEB SERVICE IMPORTER 
		#########################################
	 -->
	<section id="wsdl-to-web-service-import-section">
		<title>Import WSDL Into Web Service</title>
		<para>You can create a <emphasis role="bold">Web Service</emphasis> 
		model by selecting a <emphasis role="bold">WSDL</emphasis> file in 
		your workspace, importing <emphasis role="bold">WSDL</emphasis> files 
		from the file system or by defining a URL. The Teiid Designer will 
		interpret the <emphasis role="bold">WSDL</emphasis>, locate any 
		associated or dependent <emphasis role="bold">XML Schema</emphasis> 
		files, generate an <emphasis role="bold">XML View</emphasis> of the 
		schema components and create a <emphasis role="bold">Web 
		Service</emphasis> model representing the interfaces and operations 
		defined in the <emphasis role="bold">WSDL</emphasis>.</para>
		<itemizedlist>
			<listitem>
				<para>
					There are three options for selecting the 
					<emphasis role="bold">WSDL</emphasis>
					 for your 
					<emphasis role="bold">Web Service</emphasis>
					 generation
					<itemizedlist>
						<listitem>
							<para><emphasis role="bold">Workspace Location</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">File System 
							Location</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">URL</emphasis></para>
						</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</itemizedlist>
		<para>Detailed steps for each of these options is described below, as 
		well as a description of how the wizard handles <emphasis role="bold">
		WSDL</emphasis> errors.</para>
		<section id="workspace-location-wsdl-ws-section">
			<title>Import WSDL From Workspace Location</title>
			<para/>
			<itemizedlist>
				<listitem>
					<para>
						You can create a 
						<emphasis role="bold">Web Service</emphasis>
						 model by selecting a 
						<emphasis role="bold">WSDL</emphasis>
						 file from your workspace.
						<itemizedlist>
							<listitem>
								<para><emphasis role="bold">Step 1</emphasis> - Choose the 
								<emphasis role="bold">File Import</emphasis> choose the 
								<emphasis role="bold">File &gt; Import</emphasis> action 
								<inlinemediaobject><imageobject>
								<imagedata fileref="images/icons/import-wiz.png"/>
								</imageobject></inlinemediaobject> in the toolbar or select a 
								project, folder or model in the tree and choose 
								<emphasis role="bold">Import...</emphasis></para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 2</emphasis> - Select the 
								import option <emphasis role="bold">Teiid Designer &gt; WSDL 
								File or URL &gt;&gt; Web Service Model</emphasis> option shown 
								below and click <emphasis role="bold">Next&gt;</emphasis></para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 3</emphasis> - Input a valid 
								name for your <emphasis role="bold">Web Service</emphasis> 
								model and select the <emphasis role="bold">
								Workspace...</emphasis> button. Locate your workspace 
								<emphasis role="bold">WSDL</emphasis> file in the selection 
								dialog and click <emphasis role="bold">OK&gt;</emphasis>. Click 
								<emphasis role="bold">Next&gt;</emphasis> to continue.</para>
								<figure>
									<title>WSDL File Selection Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-2.png"/>
									</imageobject></mediaobject>
								</figure>
								<figure>
									<title>WSDL File Workspace Selection Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-1.png"/>
									</imageobject></mediaobject>
								</figure>
								<note>
									<para>
										<itemizedlist>
											<listitem>
												<para>If no <emphasis role="bold">WSDL</emphasis> is 
												selected or specified then the importer will only create an 
												empty <emphasis role="bold">Web Service</emphasis> model. 
												No <emphasis role="bold">XML Schema</emphasis> or 
												<emphasis role="bold">XML View</emphasis> models will be 
												generated.</para>
											</listitem>
											<listitem>
												<para>Any referenced files ( <emphasis role="bold">
												WSDL</emphasis>s or schemas) must either be embedded in the 
												<emphasis role="bold">WSDL</emphasis> file or exist on your 
												file system.</para>
											</listitem>
										</itemizedlist>
									</para>
								</note>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 4</emphasis> - The next page 
								is titled <emphasis role="bold">Namespace 
								Resolution</emphasis>. This page identifies successful and 
								errant <emphasis role="bold">WSDL</emphasis> namespace 
								resolution. The main WSDL document will essentially always be 
								resolved, since the workspace file chooser is used to obtain 
								the path. Problems will occur when the main 
								<emphasis role="bold">WSDL</emphasis> file imports other 
								<emphasis role="bold">WSDL</emphasis> files that cannot be 
								resolved. If no errors, select <emphasis role="bold">
								Next</emphasis> to proceed, or <emphasis role="bold">
								Finish</emphasis> (if enabled) to complete with default 
								options.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-3.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 5</emphasis> - The next page 
								<emphasis role="bold">WSDL Operations Selection</emphasis> 
								allows customizing the resulting content of your 
								<emphasis role="bold">Web Service</emphasis> model by 
								selecting/deselecting various operations and interfaces in the 
								following dialog.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-4.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 6</emphasis> - The next page 
								is titled <emphasis role="bold">Schema Workspace Location 
								Selection</emphasis>. This page lists all schemas imported by 
								the WSDL (along with any dependent schemas referenced within 
								schemas) as well as schemas embedded in the WSDL and indicates 
								whether or not they are resolvable. All resolved schemas will 
								be created in a separate file and added to the workspace. The 
								editor panel allows you to change the default file name of the 
								new schema file(s).</para>
								<para>If no errors, select <emphasis role="bold">
								Next</emphasis> to proceed, or <emphasis role="bold">
								Finish</emphasis> to complete with default option</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-5.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 7</emphasis> - The last page 
								titled <emphasis role="bold">XML Model Generation</emphasis> 
								allows you to change the name of the <emphasis role="bold">XML 
								View</emphasis> model if the <emphasis role="bold">Generate 
								virtual XML document model</emphasis> is checked. Input desired 
								name or use the default name provide. Select 
								<emphasis role="bold">Finish</emphasis> to complete.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-6.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
			</itemizedlist>
			<para>In order to successfully generate Web Services from WSDL, the 
			WSDL must be error free. WSDL validation is performed during 
			<emphasis>Step 3</emphasis> above. If errors do exist, a error 
			summary dialog will be displayed (shown below) and you will not be 
			able to <emphasis>Finish</emphasis> the wizard until the WSDL 
			problems are fixed or you re-import and select a valid WSDL 
			file.</para>
			<figure>
				<title>WSDL Validation Problems Dialog</title>
				<mediaobject><imageobject>
				<imagedata fileref="images/screencaps/import-wsdl-validation-problems.png"/>
				</imageobject></mediaobject>
			</figure>
		</section>
		<section id="file-system-location-wsdl-ws-section">
			<title>Import WSDL From File System Location</title>
			<para/>
			<itemizedlist>
				<listitem>
					<para>
						You can create a 
						<emphasis role="bold">Web Service</emphasis>
						 model by selecting a 
						<emphasis role="bold">WSDL</emphasis>
						 file from your local file system.
						<itemizedlist>
							<listitem>
								<para><emphasis role="bold">Step 1</emphasis> - Choose the 
								<emphasis role="bold">File Import</emphasis> choose the 
								<emphasis role="bold">File &gt; Import</emphasis> action 
								<inlinemediaobject><imageobject>
								<imagedata fileref="images/icons/import-wiz.png"/>
								</imageobject></inlinemediaobject> in the toolbar or select a 
								project, folder or model in the tree and choose 
								<emphasis role="bold">Import...</emphasis></para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 2</emphasis> - Select the 
								import option <emphasis role="bold">Teiid Designer &gt; WSDL 
								File or URL &gt;&gt; Web Service Model</emphasis> and click 
								<emphasis role="bold">Next&gt;</emphasis></para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 3</emphasis> - Input a valid 
								name for your <emphasis role="bold">Web Service</emphasis> 
								model and select the <emphasis role="bold">File 
								System...</emphasis> button. Locate your file system 
								<emphasis role="bold">WSDL</emphasis> file in the selection 
								dialog and click <emphasis role="bold">OK&gt;</emphasis>.</para>
								<figure>
									<title>WSDL File Selection Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-file-system-page-2.png"/>
									</imageobject></mediaobject>
								</figure>
								<note>
									<para>
										<itemizedlist>
											<listitem>
												<para>If no <emphasis role="bold">WSDL</emphasis> is 
												selected or specified then the importer will only create an 
												empty <emphasis role="bold">Web Service</emphasis> model. 
												No <emphasis role="bold">XML Schema</emphasis> or 
												<emphasis role="bold">XML View</emphasis> models will be 
												generated.</para>
											</listitem>
											<listitem>
												<para>Any referenced files ( <emphasis role="bold">
												WSDL</emphasis>s or schemas) must either be embedded in the 
												<emphasis role="bold">WSDL</emphasis> file or exist on your 
												file system.</para>
											</listitem>
										</itemizedlist>
									</para>
								</note>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 4</emphasis> - The next page 
								is titled <emphasis role="bold">Namespace 
								Resolution</emphasis>. This page identifies successful and 
								errant <emphasis role="bold">WSDL</emphasis> namespace 
								resolution. The main WSDL document will essentially always be 
								resolved, since the workspace file chooser is used to obtain 
								the path. Problems will occur when the main 
								<emphasis role="bold">WSDL</emphasis> file imports other 
								<emphasis role="bold">WSDL</emphasis> files that cannot be 
								resolved. If no errors, select <emphasis role="bold">
								Next</emphasis> to proceed, or <emphasis role="bold">
								Finish</emphasis> (if enabled) to complete with default 
								options.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-3.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 5</emphasis> - The next page 
								<emphasis role="bold">WSDL Operations Selection</emphasis> 
								allows customizing the resulting content of your 
								<emphasis role="bold">Web Service</emphasis> model by 
								selecting/deselecting various operations and interfaces in the 
								following dialog.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-4.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 6</emphasis> - The next page 
								is titled <emphasis role="bold">Schema Workspace Location 
								Selection</emphasis>. This page lists all schemas imported by 
								the WSDL (along with any dependent schemas referenced within 
								schemas) as well as schemas embedded in the WSDL and indicates 
								whether or not they are resolvable. All resolved schemas will 
								be created in a separate file and added to the workspace. The 
								editor panel allows you to change the default file name of the 
								new schema file(s).</para>
								<para>If no errors, select <emphasis role="bold">
								Next</emphasis> to proceed, or <emphasis role="bold">
								Finish</emphasis> to complete with default option</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-5.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 7</emphasis> - The last page 
								titled <emphasis role="bold">XML Model Generation</emphasis> 
								allows you to change the name of the <emphasis role="bold">XML 
								View</emphasis> model if the <emphasis role="bold">Generate 
								virtual XML document model</emphasis> is checked. Input desired 
								name or use the default name provide. Select 
								<emphasis role="bold">Finish</emphasis> to complete.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-workspace-page-6.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
			</itemizedlist>
			<para>In order to successfully generate Web Services from WSDL, the 
			WSDL must be error free. WSDL validation is performed during 
			<emphasis>Step 3</emphasis> above. If errors do exist, a error 
			summary dialog will be displayed (shown below) and you will not be 
			able to <emphasis>Finish</emphasis> the wizard until the WSDL 
			problems are fixed or you re-import and select a valid WSDL 
			file.</para>
			<figure>
				<title>WSDL Validation Problems Dialog</title>
				<mediaobject><imageobject>
				<imagedata fileref="images/screencaps/import-wsdl-validation-problems.png"/>
				</imageobject></mediaobject>
			</figure>
		</section>
		<section id="url-location-wsdl-ws-section">
			<title>Import WSDL From URL</title>
			<para/>
			<itemizedlist>
				<listitem>
					<para>
						You can create a 
						<emphasis role="bold">Web Service</emphasis>
						 model by selecting a 
						<emphasis role="bold">WSDL</emphasis>
						 file based on a URL.
						<itemizedlist>
							<listitem>
								<para><emphasis role="bold">Step 1</emphasis> - Choose the 
								<emphasis role="bold">File Import</emphasis> choose the 
								<emphasis role="bold">File &gt; Import</emphasis> action 
								<inlinemediaobject><imageobject>
								<imagedata fileref="images/icons/import-wiz.png"/>
								</imageobject></inlinemediaobject> in the toolbar or select a 
								project, folder or model in the tree and choose 
								<emphasis role="bold">Import...</emphasis></para>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 2</emphasis> - Select the 
								import option <emphasis role="bold">Teiid Designer &gt; WSDL 
								File or URL &gt;&gt; Web Service Model</emphasis> and click 
								<emphasis role="bold">Next&gt;</emphasis></para>
							</listitem>
							<listitem>
								<para>
									<emphasis role="bold">Step 3</emphasis>
									 - Input a valid name for your 
									<emphasis role="bold">Web Service</emphasis>
									 model and select the 
									<emphasis role="bold">URL...</emphasis>
									 button.
									<itemizedlist>
										<listitem>Enter a valid WSDL URL. If the URL cannot be 
										validated then an error will be displayed and the 
										<emphasis role="bold">OK&gt;</emphasis> button 
										disabled.</listitem>
										<listitem>If the WSDL is protected by basic HTTP 
										authentication then this option should be selected and the 
										appropriate username and password entered.</listitem>
										<listitem>Click <emphasis role="bold">OK&gt;</emphasis> to 
										continue.</listitem>
									</itemizedlist>
									Click 
									<emphasis role="bold">Next&gt;</emphasis>
									 to continue.
								</para>
								<figure>
									<title>WSDL URL Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-url-page-2.png"/>
									</imageobject></mediaobject>
								</figure>
								<note>
									<para>
										<itemizedlist>
											<listitem>
												<para>If no <emphasis role="bold">WSDL</emphasis> is 
												selected or specified then the importer will only create an 
												empty <emphasis role="bold">Web Service</emphasis> model. 
												No <emphasis role="bold">XML Schema</emphasis> or 
												<emphasis role="bold">XML View</emphasis> models will be 
												generated.</para>
											</listitem>
											<listitem>
												<para>Any referenced files ( <emphasis role="bold">
												WSDL</emphasis>s or schemas) must either be embedded in the 
												<emphasis role="bold">WSDL</emphasis> file or exist on your 
												file system.</para>
											</listitem>
										</itemizedlist>
									</para>
								</note>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 4</emphasis> - The next page 
								is titled <emphasis role="bold">Namespace 
								Resolution</emphasis>. This page identifies successful and 
								errant <emphasis role="bold">WSDL</emphasis> namespace 
								resolution. The main WSDL document will essentially always be 
								resolved, since the workspace file chooser is used to obtain 
								the path. Problems will occur when the main 
								<emphasis role="bold">WSDL</emphasis> file imports other 
								<emphasis role="bold">WSDL</emphasis> files that cannot be 
								resolved. If no errors, select <emphasis role="bold">
								Next</emphasis> to proceed, or <emphasis role="bold">
								Finish</emphasis> (if enabled) to complete with default 
								options.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-url-page-3.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 5</emphasis> - The next page 
								<emphasis role="bold">WSDL Operations Selection</emphasis> 
								allows customizing the resulting content of your 
								<emphasis role="bold">Web Service</emphasis> model by 
								selecting/deselecting various operations and interfaces in the 
								following dialog.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-url-page-4.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 6</emphasis> - The next page 
								is titled <emphasis role="bold">Schema Workspace Location 
								Selection</emphasis>. This page lists all schemas imported by 
								the WSDL (along with any dependent schemas referenced within 
								schemas) as well as schemas embedded in the WSDL and indicates 
								whether or not they are resolvable. All resolved schemas will 
								be created in a separate file and added to the workspace. The 
								editor panel allows you to change the default file name of the 
								new schema file(s).</para>
								<para>If no errors, select <emphasis role="bold">
								Next</emphasis> to proceed, or <emphasis role="bold">
								Finish</emphasis> to complete with default option</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-url-page-5.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
							<listitem>
								<para><emphasis role="bold">Step 7</emphasis> - The last page 
								titled <emphasis role="bold">XML Model Generation</emphasis> 
								allows you to change the name of the <emphasis role="bold">XML 
								View</emphasis> model if the <emphasis role="bold">Generate 
								virtual XML document model</emphasis> is checked. Input desired 
								name or use the default name provide. Select 
								<emphasis role="bold">Finish</emphasis> to complete.</para>
								<figure>
									<title>Namespace Resolution Dialog</title>
									<mediaobject><imageobject>
									<imagedata fileref="images/screencaps/import-wsdl-ws-url-page-6.png"/>
									</imageobject></mediaobject>
								</figure>
							</listitem>
						</itemizedlist>
					</para>
				</listitem>
			</itemizedlist>
			<para>In order to successfully generate Web Services from WSDL, the 
			WSDL must be error free. WSDL validation is performed during 
			<emphasis>Step 3</emphasis> above. If errors do exist, a error 
			summary dialog will be displayed (shown below) and you will not be 
			able to <emphasis>Finish</emphasis> the wizard until the WSDL 
			problems are fixed or you re-import and select a valid WSDL 
			file.</para>
			<figure>
				<title>WSDL Validation Problems Dialog</title>
				<mediaobject><imageobject>
				<imagedata fileref="images/screencaps/import-wsdl-validation-problems.png"/>
				</imageobject></mediaobject>
			</figure>
		</section>
	</section>
	<!-- 
		####### XML SCHEMA IMPORTER #########################################
	 -->
	<section id="xsd-schema-import-section">
		<title>Import from an XML Schema File</title>
		<para/>
		<itemizedlist>
			<listitem>
				<para>
					You can import an 
					<emphasis role="bold">XML Schema</emphasis>
					 file (XSD) files using the steps below.
					<itemizedlist>
						<listitem>
							<para><emphasis role="bold">Step 1</emphasis> - In 
							<emphasis role="bold">Model Explorer</emphasis> choose the 
							<emphasis role="bold">File &gt; Import</emphasis> action 
							<inlinemediaobject><imageobject>
							<imagedata fileref="images/icons/import-wiz.png"/>
							</imageobject></inlinemediaobject> in the toolbar or select a 
							project, folder or model in the tree and choose 
							<emphasis role="bold">Import...</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 2</emphasis> - Select the 
							import option <emphasis role="bold">Teiid Designer &gt; XML 
							Schemas</emphasis> and click <emphasis role="bold">
							Next&gt;</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 3</emphasis> - Select either 
							<emphasis role="bold">Import XML Schemas from file 
							system</emphasis> or <emphasis role="bold">Import XML Schemas 
							via URL</emphasis> and click <emphasis role="bold">Next 
							&gt;</emphasis></para>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 4a</emphasis> - If importing 
							from file system, the <emphasis role="bold">Import XML 
							Files</emphasis> dialog is displayed. Click on the 
							<emphasis role="bold">Browse</emphasis> button to find the 
							directory that contains the XML file(s) you wish to 
							import.</para>
							<itemizedlist>
								<listitem>
									<para>To select all of the XML files in the directory, click 
									the checkbox next to the folder in the left panel.</para>
								</listitem>
								<listitem>
									<para>To select individual XML files, click the checkboxes 
									next to the files you want in the right panel</para>
								</listitem>
							</itemizedlist>
							<figure>
								<title>Select XML From File System</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-xml-schema-page-2a.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 4b</emphasis> - If importing 
							from URL, select the <emphasis>Import XML Schemas via 
							URL</emphasis> option and click <emphasis>OK</emphasis> to 
							display the final <emphasis>Add XML Schema URLs</emphasis> 
							wizard page.</para>
							<figure>
								<title>Add XML Schema URLs Dialog</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-xml-schema-url-page-1.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 5</emphasis> - Click the Add 
							XML Schema URL button <inlinemediaobject><imageobject>
							<imagedata fileref="images/icons/new-object.png"/>
							</imageobject></inlinemediaobject>. Enter a valid schema URL. 
							Click OK. Schema will be validated and resulting entry added to 
							the list of XML Schema URLs.</para>
							<figure>
								<title>Add XML Schema URLs</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-xml-schema-url-page-2.png"/>
								</imageobject></mediaobject>
							</figure>
							<para>The schema URL is now displayed in the XML Schema URLs 
							list.</para>
							<figure>
								<title>Add XML Schema URLs</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-xml-schema-url-page-3.png"/>
								</imageobject></mediaobject>
							</figure>
						</listitem>
						<listitem>
							<para><emphasis role="bold">Step 6</emphasis> - Click 
							<emphasis role="bold">Finish</emphasis>.</para>
						</listitem>
					</itemizedlist>
				</para>
			</listitem>
		</itemizedlist>
		<note>
			<para>XML files may have dependent files. This importer will 
			determine these dependencies and import these as well if Add 
			Dependent Schema Files is checked</para>
		</note>
	</section>
	<!-- 
		####### LDAP IMPORTER #########################################
	 -->
	<section id="ldap-import-section">
		<title>Import From an LDAP Server</title>
		<para>The Lightweight Directory Access Protocol, or LDAP, is a 
		network protocol for accessing directory services over TCP/IP. A 
		directory contains a collection of related data, organized 
		hierarchically in a tree format. Each node in the tree is a directory 
		entry, and each entry consists of a set of attribute-value pairs. 
		Each directory entry has a unique identifier, known as its 
		Distinguished Name (DN). The DN consists of a Relative Distinguished 
		Name (RDN), constructed from an attribute from the entry itself, 
		followed by the parent entry’s DN.</para>
		<para>
			In Teiid Designer, an LDAP Server can be modelled by doing the 
			following:
			<itemizedlist>
				<listitem>LDAP subtrees are represented as if they were tables in a 
				relational database.</listitem>
				<listitem>Each node in the subtree is represented as a row in the 
				table.</listitem>
				<listitem>Each attribute of the given node can be represented as a 
				column in the table.</listitem>
				<listitem>The RDN (or DN) can be used to represent a primary 
				key.</listitem>
			</itemizedlist>
		</para>
		<para>The LDAP metadata is modeled using the relational metamodel. 
		Each table in the relational model represents a directory entry while 
		each row in the table represents a child entry of the directory 
		entry. Each column of the table represents an attribute of the child 
		entry that may exist. In general, each table and column defines the 
		LDAP-specific information in the property “Name In Source”. This 
		allows the connector to identify the attribute or Base DN name within 
		the data source, ie. within LDAP. The actual name of the table and 
		column can differ from the name in source, allowing for more 
		descriptive labelling in models and queries.</para>
		<itemizedlist>
			<listitem>
				<para>The relational source model can be created from LDAP data 
				using the steps below.</para>
				<itemizedlist>
					<listitem>
						<para><emphasis role="bold">Step 1</emphasis> - In 
						<emphasis role="bold">Model Explorer</emphasis> choose the 
						<emphasis role="bold">File &gt; Import</emphasis> action 
						<inlinemediaobject><imageobject>
						<imagedata fileref="images/icons/import-wiz.png"/>
						</imageobject></inlinemediaobject> in the toolbar or select a 
						project, folder or model in the tree and choose 
						<emphasis role="bold">Import...</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 2</emphasis> - Select the import 
						option <emphasis role="bold">Teiid Designer &gt; LDAP Service 
						&gt;&gt; Source Model</emphasis> and click <emphasis role="bold">
						Next&gt;</emphasis></para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 3</emphasis> - Select an 
						existing or previous LDAP connection profile from the drop-down 
						selector or press <emphasis role="bold">New...</emphasis> button 
						to launch the <emphasis role="bold">New Connection 
						Profile</emphasis> dialog (See Eclipse Data Tools documentation) 
						or <emphasis role="bold">Edit...</emphasis> to modify/change an 
						existing connection profile prior to selection.</para>
						<note>
							Information required for a new connection:
							<itemizedlist>
								<listitem>Connection Username / password - an administrator 
								account to browse the ldap tree, eg. 
								cn=Manager,dc=birds-of-prey,dc=org</listitem>
								<listitem>Connection URL, eg. ldap://falcon:389</listitem>
								<listitem>Principal Distinguished Name (DN) Suffix - the root 
								DN of the ldap tree</listitem>
								<listitem>An LDAP Connection Factory implementation class, eg. 
								com.sun.jndi.ldap.LdapCtxFactory</listitem>
							</itemizedlist>
						</note>
						<para>
							Selection of the connection profile populates the LDAP Service 
							URL and DN Suffix fields. The remaining requirements for the 
							wizard page is the choosing of a suitable model file as the 
							destination of the imported tables. If the selection is an 
							existing model then the wizard will merge the new tables with 
							the model&apos;s current content.
							<figure>
								<title>LDAP Definition Wizard Page</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-ldap-definition-page.png"/>
								</imageobject></mediaobject>
							</figure>
						</para>
					</listitem>
					<listitem>
						<para><emphasis role="bold">Step 4</emphasis> - After selecting a 
						<emphasis>Connection Profile</emphasis>, click 
						<emphasis role="bold">Next&gt;</emphasis></para>
					</listitem>
					<listitem>
						<para>
							<emphasis role="bold">Step 5</emphasis>
							 - On the 
							<emphasis role="bold">Select LDAP Entries to be modelled as 
							tables</emphasis>
							 page, select the LDAP entries from the tree to be created as 
							tables in the source model. Entries are selected by the ticking 
							of their respective checkboxes in the tree. The highlighting of 
							an entry displays the following attributes:
							<itemizedlist>
								<listitem>Table Name - this is the table&apos;s label and can 
								be modified to a more readable value</listitem>
								<listitem>Table Source Name - the fully qualified entry name. 
								This is not editable in the wizard and should remain unchanged 
								in the subsequently created source model</listitem>
								<listitem>Table Source Name Suffix - an additional suffix can 
								be added that further limits the scope of the table&apos;s 
								search criteria. The suffix is in the format of <emphasis>
								?search_scope?objectClass_name</emphasis> where search_scope is 
								one of OBJECT_SCOPE (first and only one entry returned), 
								ONELEVEL_SCOPE (only entries directly below the selected entry 
								are returned) or SUBTREE_SCOPE (recursively return all entries 
								below the selected entry) and objectClass_name is the name of a 
								specific type of objectClass in the LDAP tree, eg. return only 
								the &apos;inetOrgPerson&apos; entries. Both criteria are 
								optional (but the &apos;?&apos;s are not) so it is possible to 
								have a suffix such as <emphasis>? ? 
								inetOrgPerson</emphasis>.</listitem>
							</itemizedlist>
							Click 
							<emphasis role="bold">Next&gt;</emphasis>
							 .
						</para>
						<figure>
							<title>Select LDAP entries to be modelled as tables page</title>
							<mediaobject><imageobject>
							<imagedata fileref="images/screencaps/import-ldap-table-page.png"/>
							</imageobject></mediaobject>
						</figure>
					</listitem>
					<listitem>
						<para>
							<emphasis role="bold">Step 6</emphasis>
							 - The 
							<emphasis role="bold">Select the LDAP Attributes to be modelled 
							as columns</emphasis>
							 page displays the previously selected LDAP entries and the 
							attributes of their 
							<emphasis>child</emphasis>
							 entries. The purpose of a selected attribute is to be created 
							as a column in the relevant source model table. Attributes are 
							selected by the ticking of their respective checkboxes in the 
							tree. The highlighting of an attribute displays the following 
							properties:
							<itemizedlist>
								<listitem>Column Name - this is the column&apos;s label and can 
								be modified to a more readable value</listitem>
								<listitem>Column Source Name - the real LDAP attribute name. 
								This is not editable in the wizard and should remain unchanged 
								in the subsequently created source model</listitem>
								<listitem>Column Distinct Value Count - The number of distinct 
								values assigned to the specific attribute in the LDAP service. 
								This value is useful in optimising queries using the source 
								model. This is not editable in the wizard and should remain 
								unchanged in the subsequently created source model.</listitem>
								<listitem>Column Null Value Count - The number of entries where 
								the specific attribute has no value assigned in the LDAP 
								service. This value is useful in optimising queries using the 
								source model. This is not editable in the wizard and should 
								remain unchanged in the subsequently created source 
								model.</listitem>
								<listitem>Column Length - The maximum length of existing values 
								assigned to the attribute in the LDAP service. This value is 
								assigned as the maximum length of the column. This is not 
								editable in the wizard but can be edited in the source model 
								later should this be required.</listitem>
							</itemizedlist>
							Click 
							<emphasis role="bold">Finish&gt;</emphasis>
							 .
							<figure>
								<title>Select the LDAP Attributes to be modelled as columns 
								page</title>
								<mediaobject><imageobject>
								<imagedata fileref="images/screencaps/import-ldap-columns-page.png"/>
								</imageobject></mediaobject>
							</figure>
						</para>
					</listitem>
				</itemizedlist>
			</listitem>
		</itemizedlist>
		<para>Once the wizard has completed, the new source model will be 
		created.</para>
		<figure>
			<title>Example of an LDAP source model</title>
			<mediaobject><imageobject>
			<imagedata fileref="images/screencaps/import-ldap-source-model.png"/>
			</imageobject></mediaobject>
		</figure>
		<para>
			The LDAP connector also provides an update capability. However, 
			additional modeling requirements are imposed beyond those required 
			for read-only access. The additional requirements are described 
			below.
			<itemizedlist>
				<listitem><emphasis>Supports Update</emphasis> table property - to 
				enable updates, each source model table must have this property set 
				to &apos;true&apos;;</listitem>
				<listitem><emphasis>Updateable</emphasis> column property - to 
				enable updates, each column in the source model table must have 
				this property set to &apos;true&apos;;</listitem>
				<listitem>
					Additional required columns:
					<itemizedlist>
						<listitem><emphasis>DN</emphasis> - for all update types (INSERT, 
						UPDATE, and DELETE), the distinguished name must be modeled as a 
						column, setting the <emphasis>name in source</emphasis> to 
						<emphasis>dn</emphasis>. For UPDATE and DELETE capability, the DN 
						must be specified in the criteria clause while for INSERT, the DN 
						must be one of the column values to be set.</listitem>
						<listitem><emphasis>objectClass</emphasis> - for INSERT, the 
						objectclass must be modelled as a column, setting the <emphasis>
						name in source</emphasis> to <emphasis>objectClass</emphasis>. It 
						must also be one of the column values to be set.</listitem>
						<listitem><emphasis>additional</emphasis> - each entry defined in 
						the LDAP directory’s schema may also have one or more additional 
						required columns. This is dependent on the LDAP server 
						implementatation so consult the LDAP documentation 
						accordingly.</listitem>
					</itemizedlist>
				</listitem>
			</itemizedlist>
		</para>
		<para>
			A selection of example queries:
			<itemizedlist>
				<listitem>SELECT * FROM LdapModel.People</listitem>
				<listitem><literallayout format="INSERT">INSERT INTO LdapModel.People (dn, sn, 
				objectclass, Name) VALUES 
				(&apos;cn=JoeYoung,ou=people,dc=example,dc=org&apos;,&apos;Young&apos;,&apos;person&apos;, 
				&apos;Joe Young&apos;)</literallayout></listitem>
				<listitem><literallayout format="UPDATE">UPDATE LdapModel.People SET 
				PhoneNumber=&apos;(314) 299-2999&apos; WHERE 
				DN=&apos;cn=JoeYoung,ou=people,dc=example,dc=org&apos;</literallayout></listitem>
				<listitem><literallayout format="DELETE">DELETE FROM LdapModel.People WHERE 
				DN=&apos;cn=JoeYoung,ou=people,dc=example,dc=org&apos;</literallayout></listitem>
			</itemizedlist>
		</para>
	</section>
</chapter>
